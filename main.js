!function(){"use strict";const e=document.querySelector(".profile__image"),t=document.querySelector(".popup_type_profile"),s=document.querySelector(".profile__button"),r=(t.querySelector(".popup__close"),t.querySelector(".popup__input_type_name")),i=t.querySelector(".popup__input_type_profession"),n=document.querySelector(".add-button"),o=(document.querySelector(".elements__cards"),{inputSelector:".popup__input",submitButtonSelector:".popup__save",inactiveButtonClass:"popup__save_disabled",inputErrorClass:"popup__input-error_open",errorClass:"popup__error_visible"}),a=document.querySelector(".popup__form_edit"),l=document.querySelector(".popup__form_cards"),c=document.querySelector(".popup__form_avatar");function d(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var h=class{constructor(e,t){d(this,"_showInputError",((e,t)=>{const{inputErrorClass:s,errorClass:r}=this._settings,i=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(r),i.textContent=t,i.classList.add(s)})),d(this,"_hideInputError",(e=>{const{inputErrorClass:t,errorClass:s}=this._settings,r=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(s),r.classList.remove(t),r.textContent=""})),d(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)})),d(this,"_setEventListeners",(()=>{const{inputSelector:e}=this._settings;this.inputList=Array.from(this._formElement.querySelectorAll(e)),this._toggleButton(),this.inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButton()}))}))})),d(this,"_hasValidInput",(()=>this.inputList.every((e=>e.validity.valid)))),d(this,"_toggleButton",(()=>{const{inactiveButtonClass:e}=this._settings;this._inactiveButtonClass=e,this._hasValidInput()?this.enableButton():this.disableButton()})),d(this,"enableButton",(()=>{this._submitButton.disabled=!1,this._submitButton.classList.remove(this._inactiveButtonClass)})),d(this,"disableButton",(()=>{this._submitButton.disabled=!0,this._submitButton.classList.add(this._inactiveButtonClass)})),this._settings=e,this._formElement=t,this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector)}resetValidation(){this.inputList.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class _{constructor(e,t,s,r,i,n){console.log("data",e),this._data=e,this._name=e.name,this._link=e.link,this._likes=e.likes,this._id=e._id,this._userId=t,this._ownerId=e.owner._id,console.log("ownerId",e.owner._id),this._templateCardSelector=s,this._handleCardClick=r,this._handleLikeIcon=i,this._handleDeleteClick=n}getId(){return this._id}_getTemplate(){return document.querySelector(this._templateCardSelector).content.querySelector(".elements__card")}_addEventListeners(){this._likeButton.addEventListener("click",(()=>this._handleLikeIcon())),this._deleteButton.addEventListener("click",(()=>this._handleDeleteClick(this))),this._cardImage.addEventListener("click",(()=>this._handleCardClick(this._name,this._link)))}removeCard(){this._cardElement.remove()}setLikeCounter(e){this._likes=e;const t=this._likes.length;this._cardElement.querySelector(".elements__card_likes").textContent=t,this.isLiked()?this._likeButton.classList.add("elements__button-like_active"):this._likeButton.classList.remove("elements__button-like_active")}isLiked(){return this._likes.find((e=>e._id===this._userId))}generateCard(){return this._cardElement=this._getTemplate().cloneNode(!0),this._cardImage=this._cardElement.querySelector(".elements__image"),this._cardName=this._cardElement.querySelector(".elements__card-text"),this._likeButton=this._cardElement.querySelector(".elements__button-like"),this._deleteButton=this._cardElement.querySelector(".elements__button-delete"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardName.textContent=this._name,this._addEventListeners(),this.setLikeCounter(this._likes),this._userId!==this._ownerId&&(console.log("userId",this._userId,"ownerId",this._ownerId),this._deleteButton.style.display="none"),this._cardElement}}const u="popup_open";class p{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}open(){this._popup.classList.add(u),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove(u),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popup.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&this.close()}))}}class m extends p{constructor(e,t){super(e),this._handleSubmitForm=t,this._form=this._popup.querySelector(".popup__form"),this._inputs=this._form.querySelectorAll(".popup__input")}_getInputValues(){const e={};return this._inputs.forEach((t=>{const s=t.id,r=t.value;e[s]=r})),e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmitForm(this._getInputValues())}))}setInputValues(e){this._inputs.forEach((t=>{t.value=e[t.name]}))}close(){super.close(),this._form.reset()}}const f=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}getUserInfo(){return fetch(this._baseUrl+"/users/me",{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}editProfile(e,t){return fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}editAvatar(e){return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}getInitialCards(){return fetch(this._baseUrl+"/cards",{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}addCard(e,t){return fetch(this._baseUrl+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}addLike(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"PUT",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}removeLike(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}deleteCard(e){return fetch(this._baseUrl+"/cards/"+e,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"9398a483-484e-4ebd-a374-b6b3b985e9c4","Content-Type":"application/json"}});let v;Promise.all([f.getUserInfo(),f.getInitialCards()]).then((e=>{let[t,s]=e;v=t._id,B.setUserInfo(t.name,t.about,t.avatar),q.rendererItems(s)})).catch(console.log);const k=new h(o,a),b=new h(o,l),E=new h(o,c);let g;k.enableValidation(),b.enableValidation(),E.enableValidation(),k.resetValidation();const y=new m("#popup-template",(e=>{f.editProfile(e.name,e.profession).then((t=>{B.setUserInfo(t.name,e.profession,t.avatar)})).catch(console.log).finally((()=>{y.close()}))}));y.setEventListeners();const L=new m("#popup-template-avatar",(e=>{f.editAvatar(e.link).then((e=>{B.setUserInfo(e.name,e.about,e.avatar)})).catch(console.log).finally((()=>{L.close()}))}));L.setEventListeners();const C=new m("#popup-template-form",(e=>{f.addCard(e.cardTitle,e.cardImageLink).then((e=>{const t={name:e.name,link:e.link,likes:e.likes,_id:e._id};q.addItem(t)})).catch(console.log),C.close()}));C.setEventListeners();const I=new m("#popup-template-confirm",(()=>{f.deleteCard(g.getId()).then((e=>{g.removeCard(e)})),I.close()}));I.setEventListeners();const S=new class extends p{constructor(e){super(e),this._subtitle=this._popup.querySelector(".popup__subtitle"),this._image=this._popup.querySelector(".popup__image")}open(e,t){super.open(),this._image.src=t,this._image.alt=e,this._subtitle.textContent=e}}("#popup-image");S.setEventListeners();const q=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}rendererItems(e){e.forEach((e=>{this.addItem(e)}))}addItem(e){const t=this._renderer(e);this._container.prepend(t)}}({renderer:e=>{const t=new _(e,v,"#card-template",((e,t)=>{S.open(e,t)}),(()=>{t.isLiked()?f.removeLike(t.getId()).then((e=>{t.setLikeCounter(e.likes)})):f.addLike(t.getId()).then((e=>{t.setLikeCounter(e.likes)}))}),(e=>{var t;t=e,I.open(),g=t,console.log("id =>",t)}));return t.generateCard()}},".elements__cards"),B=new class{constructor(e){let{profileNameSelector:t,profileProfessionSelector:s,profileAvatar:r}=e;this._profileName=document.querySelector(t),this._profileProfession=document.querySelector(s),this._profileAvatar=document.querySelector(r)}getUserInfo(){return{name:this._profileName.textContent,profession:this._profileProfession.textContent,avatar:this._profileAvatar.style.backgroundImage}}setUserInfo(e,t,s){this._profileName.textContent=e,this._profileProfession.textContent=t,this._profileAvatar.style.backgroundImage="url(".concat(s,")")}}({profileNameSelector:".profile__header",profileProfessionSelector:".profile__profession",profileAvatar:".profile__image"});s.addEventListener("click",(function(){const e=B.getUserInfo();r.value=e.name,i.value=e.profession,k.resetValidation(),k.enableButton(),y.open()})),n.addEventListener("click",(()=>{b.resetValidation(),b.disableButton(),C.open()})),e.addEventListener("click",(()=>{E.resetValidation(),E.disableButton(),L.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFdBQ0UsTUFBTTJKLEVBQWNyQyxFQUFTMUIsY0FFN0JoSSxFQUFVc0gsTUFBUXlFLEVBQVlsSSxLQUM5QjVELEVBQWdCcUgsTUFBUXlFLEVBQVkxQixXQUVwQ04sRUFBa0JsSCxrQkFDbEJrSCxFQUFrQnRILGVBQ2xCMkgsRUFBaUIzRCxVQVFuQnZHLEVBQVVrQyxpQkFBaUIsU0FBUyxLQUNsQzZILEVBQXFCcEgsa0JBQ3JCb0gsRUFBcUJ2SCxnQkFDckI4SCxFQUFhL0QsVUFJZjlHLEVBQWN5QyxpQkFBaUIsU0FBUyxLQUN0QzhILEVBQW9Cckgsa0JBQ3BCcUgsRUFBb0J4SCxnQkFDcEI2SCxFQUFrQjlELFUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly95YW5kZXgucHJhY3RpY3VtLnByb2plY3QvLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3lhbmRleC5wcmFjdGljdW0ucHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8veWFuZGV4LnByYWN0aWN1bS5wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly95YW5kZXgucHJhY3RpY3VtLnByb2plY3QvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly95YW5kZXgucHJhY3RpY3VtLnByb2plY3QvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3lhbmRleC5wcmFjdGljdW0ucHJvamVjdC8uL3NyYy91dGlscy9BcGkuanMiLCJ3ZWJwYWNrOi8veWFuZGV4LnByYWN0aWN1bS5wcm9qZWN0Ly4vc3JjL3BhZ2UvaW5kZXguanMiLCJ3ZWJwYWNrOi8veWFuZGV4LnByYWN0aWN1bS5wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8veWFuZGV4LnByYWN0aWN1bS5wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly95YW5kZXgucHJhY3RpY3VtLnByb2plY3QvLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvL0ZvciBQcm9maWxlIGFuZCBwb3B1cCBlbGVtZW50c1xuY29uc3QgcHJvZmlsZUF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9faW1hZ2VcIik7XG5cbmNvbnN0IHByb2ZpbGVQb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfdHlwZV9wcm9maWxlXCIpOyAvLy5wb3B1cCBiYXN0YWtpIHNpbGluZGlcbmNvbnN0IGVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2J1dHRvblwiKTtcbmNvbnN0IGNsb3NlQnV0dG9uID0gcHJvZmlsZVBvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Nsb3NlXCIpO1xuY29uc3QgaW5wdXROYW1lID0gcHJvZmlsZVBvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2lucHV0X3R5cGVfbmFtZVwiKTtcbmNvbnN0IGlucHV0UHJvZmVzc2lvbiA9IHByb2ZpbGVQb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbnB1dF90eXBlX3Byb2Zlc3Npb25cIik7XG5cbi8vIC8vLy8vQ0FSRFNcblxuY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtYnV0dG9uXCIpO1xuXG4vLyBXcmFwcGVyc1xuY29uc3QgZWxlbWVudHNMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50c19fY2FyZHNcIik7XG5cbmNvbnN0IHNldHRpbmdzID0ge1xuICBpbnB1dFNlbGVjdG9yOiBcIi5wb3B1cF9faW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLnBvcHVwX19zYXZlXCIsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwicG9wdXBfX3NhdmVfZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcInBvcHVwX19pbnB1dC1lcnJvcl9vcGVuXCIsXG4gIGVycm9yQ2xhc3M6IFwicG9wdXBfX2Vycm9yX3Zpc2libGVcIixcbn07XG5cbmNvbnN0IGVkaXRGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybV9lZGl0XCIpO1xuY29uc3QgYWRkQ2FyZEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtX2NhcmRzXCIpO1xuY29uc3QgYXZhdGFyQ2hhbmdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybV9hdmF0YXJcIik7XG5cblxuZXhwb3J0IHtcbiAgc2V0dGluZ3MsIGVkaXRGb3JtLCBhZGRDYXJkRm9ybSwgYXZhdGFyQ2hhbmdlLCBlZGl0QnV0dG9uLCBjbG9zZUJ1dHRvbiwgaW5wdXROYW1lLCBpbnB1dFByb2Zlc3Npb24sXG4gIGFkZEJ1dHRvbiwgZWxlbWVudHNMaXN0LCBwcm9maWxlQXZhdGFyXG59O1xuXG5cblxuLy9jb25zdCBwcm9maWxlSW5mbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9faW5mb1wiKTtcbi8vIGNvbnN0IHByb2ZpbGVOYW1lID0gcHJvZmlsZUluZm8ucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19oZWFkZXJcIik7XG4vLyBjb25zdCBwcm9maWxlUHJvZmVzc2lvbiA9IHByb2ZpbGVJbmZvLnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fcHJvZmVzc2lvblwiKTtcbi8vIGNvbnN0IHBvcHVwTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9wdXBcIik7XG4vLyBjb25zdCBwcm9maWxlRm9ybSA9IGRvY3VtZW50LmZvcm1zLnByb2ZpbGVGb3JtOyAvL3F1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9mb3JtJyk7Ly9cbi8vIGNvbnN0IHBvcHVwU2VsZWN0b3IgPSBcInBvcHVwX29wZW5cIjtcblxuXG4vLyBjb25zdCBDYXJkX1RlbXBsYXRlX1NlbGVjdG9yID0gXCIjY2FyZC10ZW1wbGF0ZVwiO1xuLy8gY29uc3QgcHJldmlld0ltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlLXByZXZpZXdcIik7XG4vLyBjb25zdCBjYXJkRGVsZXRlUG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX3R5cGVfY29uZmlybS1kZWxldGVcIik7XG4vLyBjb25zdCBkZWxldGVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzX19idXR0b25fZGVsZXRlXCIpXG4iLCJjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XG4gICAgdGhpcy5fc2V0dGluZ3MgPSBzZXR0aW5ncztcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICB0aGlzLl9zZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvclxuICAgICk7XG4gIH1cblxuICBfc2hvd0lucHV0RXJyb3IgPSAoaW5wdXQsIGVycm9yTWVzc2FnZSkgPT4ge1xuICAgIGNvbnN0IHsgaW5wdXRFcnJvckNsYXNzLCBlcnJvckNsYXNzIH0gPSB0aGlzLl9zZXR0aW5ncztcblxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0LmlkfS1lcnJvcmApO1xuICAgIGlucHV0LmNsYXNzTGlzdC5hZGQoZXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKGlucHV0RXJyb3JDbGFzcyk7XG4gIH07XG5cbiAgX2hpZGVJbnB1dEVycm9yID0gKGlucHV0KSA9PiB7XG4gICAgY29uc3QgeyBpbnB1dEVycm9yQ2xhc3MsIGVycm9yQ2xhc3MgfSA9IHRoaXMuX3NldHRpbmdzO1xuXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXQuaWR9LWVycm9yYCk7XG4gICAgaW5wdXQuY2xhc3NMaXN0LnJlbW92ZShlcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShpbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XG4gIH07XG5cbiAgX2NoZWNrSW5wdXRWYWxpZGl0eSA9IChpbnB1dCkgPT4ge1xuICAgIGlmICghaW5wdXQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0LCBpbnB1dC52YWxpZGF0aW9uTWVzc2FnZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0KTtcbiAgICB9XG4gIH07XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgaW5wdXRTZWxlY3RvciB9ID0gdGhpcy5fc2V0dGluZ3M7XG5cbiAgICB0aGlzLmlucHV0TGlzdCA9IEFycmF5LmZyb20oXG4gICAgICB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKGlucHV0U2VsZWN0b3IpXG4gICAgKTtcblxuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvbigpOyAvL21ldGhvZCBjaGVja1xuXG4gICAgdGhpcy5pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dCk7XG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvbigpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgX2hhc1ZhbGlkSW5wdXQgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHRoaXMuaW5wdXRMaXN0LmV2ZXJ5KChpbnB1dCkgPT4gaW5wdXQudmFsaWRpdHkudmFsaWQpO1xuICB9O1xuXG4gIF90b2dnbGVCdXR0b24gPSAoKSA9PiB7XG4gICAgY29uc3QgeyBpbmFjdGl2ZUJ1dHRvbkNsYXNzIH0gPSB0aGlzLl9zZXR0aW5ncztcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gaW5hY3RpdmVCdXR0b25DbGFzcztcblxuICAgIGlmICh0aGlzLl9oYXNWYWxpZElucHV0KCkpIHtcbiAgICAgIHRoaXMuZW5hYmxlQnV0dG9uKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZGlzYWJsZUJ1dHRvbigpO1xuICAgIH1cbiAgfTtcblxuICBlbmFibGVCdXR0b24gPSAoKSA9PiB7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gIH07XG5cbiAgZGlzYWJsZUJ1dHRvbiA9ICgpID0+IHtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICB9O1xuXG4gIHJlc2V0VmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLmlucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXQpO1xuICAgIH0pO1xuICB9XG5cbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLl9mb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBGb3JtVmFsaWRhdG9yO1xuIiwiZXhwb3J0IGNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3RvcihkYXRhLCB1c2VySWQsIHRlbXBsYXRlQ2FyZFNlbGVjdG9yLCBoYW5kbGVDYXJkQ2xpY2ssIGhhbmRsZUxpa2VJY29uLCBoYW5kbGVEZWxldGVDbGljaykge1xuICAgIGNvbnNvbGUubG9nKFwiZGF0YVwiLCBkYXRhKTtcbiAgICB0aGlzLl9kYXRhID0gZGF0YTtcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XG4gICAgdGhpcy5fbGlrZXMgPSBkYXRhLmxpa2VzO1xuICAgIHRoaXMuX2lkID0gZGF0YS5faWQ7XG4gICAgdGhpcy5fdXNlcklkID0gdXNlcklkO1xuICAgIHRoaXMuX293bmVySWQgPSBkYXRhLm93bmVyLl9pZDtcbiAgICBjb25zb2xlLmxvZyhcIm93bmVySWRcIiwgZGF0YS5vd25lci5faWQpXG5cbiAgICB0aGlzLl90ZW1wbGF0ZUNhcmRTZWxlY3RvciA9IHRlbXBsYXRlQ2FyZFNlbGVjdG9yO1xuICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcbiAgICB0aGlzLl9oYW5kbGVMaWtlSWNvbiA9IGhhbmRsZUxpa2VJY29uO1xuICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNsaWNrID0gaGFuZGxlRGVsZXRlQ2xpY2s7XG4gIH1cblxuICBnZXRJZCgpIHtcbiAgICByZXR1cm4gdGhpcy5faWRcbiAgfVxuXG4gIF9nZXRUZW1wbGF0ZSgpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl90ZW1wbGF0ZUNhcmRTZWxlY3RvcilcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50c19fY2FyZCcpO1xuICB9XG5cbiAgX2FkZEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2xpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLl9oYW5kbGVMaWtlSWNvbigpKTtcbiAgICB0aGlzLl9kZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLl9oYW5kbGVEZWxldGVDbGljayh0aGlzKSk7XG4gICAgdGhpcy5fY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5faGFuZGxlQ2FyZENsaWNrKHRoaXMuX25hbWUsIHRoaXMuX2xpbmspKTtcbiAgfVxuXG4gIHJlbW92ZUNhcmQoKXtcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5yZW1vdmUoKTtcbiAgfVxuXG4gIHNldExpa2VDb3VudGVyKG5ld0xpa2VzKSB7ICAgLy9sZW5ndGgga8Sxc23EsW7EsSBva3V5YW3EsXlvciBrYXJ0IGVrbGVuZW1peW9yIC0gaGFuZGxlY2FyZHN1Ym1pdCBmb25rc2l5b251bmEgbGlrZXMgdmUgX2lkIGVrbGV5ZXJlayDDp8O2emTDvCBeXisrXG4gICAgdGhpcy5fbGlrZXMgPSBuZXdMaWtlcztcblxuICAgIGNvbnN0IGxpa2VDb3VudGVyID0gdGhpcy5fbGlrZXMubGVuZ3RoO1xuICAgIHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50c19fY2FyZF9saWtlcycpLnRleHRDb250ZW50ID0gbGlrZUNvdW50ZXI7XG5cbiAgICBjb25zdCBsaWtlQ2xpY2tlZGJ5Q3VycmVudFVzZXIgPSB0aGlzLmlzTGlrZWQoKTtcbiAgICBpZihsaWtlQ2xpY2tlZGJ5Q3VycmVudFVzZXIpIHtcbiAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmFkZCgnZWxlbWVudHNfX2J1dHRvbi1saWtlX2FjdGl2ZScpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2VsZW1lbnRzX19idXR0b24tbGlrZV9hY3RpdmUnKTtcbiAgICB9XG4gIH1cblxuICBpc0xpa2VkKCl7XG4gICAgcmV0dXJuIHRoaXMuX2xpa2VzLmZpbmQodXNlciA9PiB1c2VyLl9pZCA9PT0gdGhpcy5fdXNlcklkKTtcbiAgfVxuXG5cbiAgZ2VuZXJhdGVDYXJkKCkge1xuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKS5jbG9uZU5vZGUodHJ1ZSk7XG5cbiAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHNfX2ltYWdlJyk7XG4gICAgdGhpcy5fY2FyZE5hbWUgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHNfX2NhcmQtdGV4dCcpO1xuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHNfX2J1dHRvbi1saWtlJyk7XG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRzX19idXR0b24tZGVsZXRlJyk7XG5cbiAgICAvL2NhcmQgLy8gZGVzdHJ1Y3R1cmluZyBhc3NpZ25tZW50Ly9cbiAgICB0aGlzLl9jYXJkSW1hZ2Uuc3JjID0gdGhpcy5fbGluaztcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWx0ID0gdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9jYXJkTmFtZS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG5cbiAgICB0aGlzLl9hZGRFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuc2V0TGlrZUNvdW50ZXIodGhpcy5fbGlrZXMpO1xuXG4gICAgaWYodGhpcy5fdXNlcklkICE9PSB0aGlzLl9vd25lcklkKSB7XG4gICAgICBjb25zb2xlLmxvZyhcInVzZXJJZFwiLCB0aGlzLl91c2VySWQsIFwib3duZXJJZFwiLCB0aGlzLl9vd25lcklkIClcbiAgICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnIC8vIGVsZW1lbnRzX19idXR0b24tZGVsZXRlXG4gICAgICB9O1xuXG4gICAgcmV0dXJuIHRoaXMuX2NhcmRFbGVtZW50O1xuICB9XG59XG5cbi8vIGlkTWF0Y2goKSB7XG4vLyAgIGlmKHRoaXMuX3VzZXJJZCAhPT0gdGhpcy5fb3duZXJJZCkge1xuLy8gICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnIC8vIGVsZW1lbnRzX19idXR0b24tZGVsZXRlXG4vLyAgICB9O1xuLy8gfVxuIiwiY29uc3QgUE9QVVBfQ0xBU1MgPSAncG9wdXAnO1xuY29uc3QgQ0xPU0VfQlVUVE9OX0NMQVNTID0gJ3BvcHVwX19jbG9zZSc7XG5jb25zdCBQT1BVUF9TRUxFQ1RPUl9DTEFTUyA9ICdwb3B1cF9vcGVuJztcblxuZXhwb3J0IGNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKVxuICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlID0gdGhpcy5faGFuZGxlRXNjQ2xvc2UuYmluZCh0aGlzKVxuICB9XG5cbiAgX2hhbmRsZUVzY0Nsb3NlKGV2dCkge1xuICAgIGlmIChldnQua2V5ID09PSAnRXNjYXBlJykge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuICB9XG5cbiAgb3BlbigpIHtcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKFBPUFVQX1NFTEVDVE9SX0NMQVNTKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShQT1BVUF9TRUxFQ1RPUl9DTEFTUyk7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKGV2dCkgPT4ge1xuICAgICAgaWYgKFxuICAgICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhQT1BVUF9DTEFTUykgfHxcbiAgICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoQ0xPU0VfQlVUVE9OX0NMQVNTKVxuICAgICAgKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9KVxuICB9XG59XG4vLyoqKiBtb3VzZWRvd24gcmVwbGFjZWQgY2xpY2sgdG8gcHJldmVudCB0aGUgYnVnIGlmIHlvdSBjbGljayBpbnNpZGUgYSBwb3B1cCBhbmQgdGhlbiBtb3ZlIHlvdXIgbW91c2Ugb3V0c2lkZSBpdFxuLy8gYW5kIHJlbGVhc2UgdGhlIGJ1dHRvbiBhYm92ZSB0aGUgb3ZlcmxheSB0aGVuIHRoZSBwb3B1cCBjbG9zZXMgYnV0IGl04oCZcyBub3RcbiIsImltcG9ydCB7IFBvcHVwIH0gZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZVN1Ym1pdEZvcm0gKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3RvcilcblxuICAgIHRoaXMuX2hhbmRsZVN1Ym1pdEZvcm0gPSBoYW5kbGVTdWJtaXRGb3JtXG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybScpXG4gICAgdGhpcy5faW5wdXRzID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXBfX2lucHV0JykgICAgICAgLy9bLi4udGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXBfX2lucHV0JyldXG4gIH1cblxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgY29uc3QgdmFsdWVzID0ge31cblxuXG4gICAgdGhpcy5faW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICBjb25zdCBrZXkgPSBpbnB1dC5pZFxuICAgICAgY29uc3QgdmFsdWUgPSBpbnB1dC52YWx1ZVxuICAgICAgdmFsdWVzW2tleV0gPSB2YWx1ZVxuICAgIH0pXG4gICAgcmV0dXJuIHZhbHVlcztcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKVxuXG4gICAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoICdzdWJtaXQnLCAoZSkgPT4ge1xuICAgICAgICAgIC8vY29uc29sZS5sb2coJ2lucHV0IHRha2VuJylcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcblxuICAgICAgICAgIHRoaXMuX2hhbmRsZVN1Ym1pdEZvcm0odGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSlcbiAgICAgICAgfSlcbiAgICAgIH1cblxuICBzZXRJbnB1dFZhbHVlcyhkYXRhKXtcbiAgICB0aGlzLl9pbnB1dHMuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIGlucHV0LnZhbHVlID0gZGF0YVtpbnB1dC5uYW1lXTtcbiAgICB9KVxuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgICBzdXBlci5jbG9zZSgpXG4gICAgICB0aGlzLl9mb3JtLnJlc2V0KClcbiAgfVxuXG59XG5cbiIsImNsYXNzIEFwaSB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICB0aGlzLl9iYXNlVXJsID0gb3B0aW9ucy5iYXNlVXJsXG4gICAgdGhpcy5faGVhZGVycyA9IG9wdGlvbnMuaGVhZGVyc1xuICB9XG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgcmV0dXJuIGZldGNoKHRoaXMuX2Jhc2VVcmwgKyAnL3VzZXJzL21lJywge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc1xuICAgIH0pLnRoZW4oIHJlcyA9PiByZXMub2sgPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QocmVzLnN0YXR1c1RleHQpKVxuICAgIC8vIC5jYXRjaChlcnIgPT4ge1xuICAgIC8vICAgY29uc29sZS5sb2coJ0FwaSBoYXMgYW4gZXJyb3IhISEnKVxuICAgIC8vIH0pXG4gIH1cblxuICBlZGl0UHJvZmlsZShuYW1lLCBhYm91dCkge1xuICAgIHJldHVybiBmZXRjaCh0aGlzLl9iYXNlVXJsICsgJy91c2Vycy9tZScsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgYWJvdXQsXG4gICAgICB9KVxuICAgIH0pLnRoZW4ocmVzID0+IHJlcy5vayA/IHJlcy5qc29uKCkgOiBQcm9taXNlLnJlamVjdChyZXMuc3RhdHVzVGV4dCkpXG4gIH1cblxuICBlZGl0QXZhdGFyKGF2YXRhcikge1xuICAgIHJldHVybiBmZXRjaCh0aGlzLl9iYXNlVXJsICsgJy91c2Vycy9tZS9hdmF0YXInLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGF2YXRhclxuICAgICAgfSlcbiAgICB9KS50aGVuKHJlcyA9PiByZXMub2sgPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QocmVzLnN0YXR1c1RleHQpKVxuICB9XG5cbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xuICAgIHJldHVybiBmZXRjaCh0aGlzLl9iYXNlVXJsICsgJy9jYXJkcycsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcbiAgICB9KS50aGVuKCByZXMgPT4gcmVzLm9rID8gcmVzLmpzb24oKSA6IFByb21pc2UucmVqZWN0KHJlcy5zdGF0dXNUZXh0KSlcbiAgfSAvL25hbWUgICYgbGluayBpbiB0aGUgYm9keSBjaGVjayBtLlxuXG4gIGFkZENhcmQobmFtZSwgbGluaykge1xuICAgIHJldHVybiBmZXRjaCh0aGlzLl9iYXNlVXJsICsgJy9jYXJkcycsIHtcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lLFxuICAgICAgICBsaW5rLFxuICAgICAgfSlcbiAgICB9KS50aGVuKHJlcyA9PiByZXMub2sgPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QocmVzLnN0YXR1c1RleHQpKVxuICB9XG5cbiAgYWRkTGlrZShpZCkge1xuICAgIHJldHVybiBmZXRjaCh0aGlzLl9iYXNlVXJsICsgJy9jYXJkcy9saWtlcy8nICsgaWQsIHtcbiAgICAgIG1ldGhvZDogXCJQVVRcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcbiAgICB9KS50aGVuKHJlcyA9PiByZXMub2sgPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QocmVzLnN0YXR1c1RleHQpKVxuICB9XG5cbiAgcmVtb3ZlTGlrZShpZCkge1xuICAgIHJldHVybiBmZXRjaCh0aGlzLl9iYXNlVXJsICsgJy9jYXJkcy9saWtlcy8nICsgaWQsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcbiAgICB9KS50aGVuKHJlcyA9PiByZXMub2sgPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QocmVzLnN0YXR1c1RleHQpKVxuICB9XG5cbiAgZGVsZXRlQ2FyZChpZCkge1xuICAgIHJldHVybiBmZXRjaCh0aGlzLl9iYXNlVXJsICsgJy9jYXJkcy8nICsgaWQsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcbiAgICB9KS50aGVuKHJlcyA9PiByZXMub2sgPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QocmVzLnN0YXR1c1RleHQpKVxuICB9XG5cblxufVxuXG5leHBvcnQgY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gIGJhc2VVcmw6IFwiaHR0cHM6Ly9hcm91bmQubm9tb3JlcGFydGllcy5jby92MS9jb2hvcnQtMy1lblwiLFxuICBoZWFkZXJzOiB7XG4gICAgYXV0aG9yaXphdGlvbjogXCI5Mzk4YTQ4My00ODRlLTRlYmQtYTM3NC1iNmIzYjk4NWU5YzRcIixcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICB9XG59KTsgLy8gdGhpcy5fYmFzZVVybCAvLyB0aGlzLl9oZWFkZXJzXG4iLCJcbmltcG9ydCBcIi4uL3BhZ2UvaW5kZXguY3NzXCI7IC8vIG1haW4gYnJpZGdlIHRvIGNzcyBmaWxlcyBhZnRlciB3ZWJwYWNrIGJ1aWxkIGFsd2F5cyBpbnN0YWxsIDFzdFxuXG5pbXBvcnQgeyBzZXR0aW5ncywgZWRpdEZvcm0sIGFkZENhcmRGb3JtLCBlZGl0QnV0dG9uLCBpbnB1dE5hbWUsIGlucHV0UHJvZmVzc2lvbixcbiAgYWRkQnV0dG9uLCBwcm9maWxlQXZhdGFyLCBhdmF0YXJDaGFuZ2UgfSBmcm9tICcuLi91dGlscy9jb25zdGFudHMuanMnO1xuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSAnLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzJztcbmltcG9ydCB7IENhcmQgfSBmcm9tICcuLi9jb21wb25lbnRzL0NhcmQuanMnO1xuaW1wb3J0IHsgU2VjdGlvbiB9IGZyb20gJy4uL2NvbXBvbmVudHMvU2VjdGlvbi5qcyc7XG5pbXBvcnQgeyBQb3B1cFdpdGhGb3JtIH0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzJztcbmltcG9ydCB7IFBvcHVwV2l0aEltYWdlIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcbmltcG9ydCB7IFVzZXJJbmZvIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcblxuaW1wb3J0IHsgYXBpLCBBcGkgfSBmcm9tIFwiLi4vdXRpbHMvQXBpLmpzXCI7XG4vL2ltcG9ydCB7IFBvcHVwIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBcIjtcblxubGV0IHVzZXJJZFxuXG4vL2FwaS5nZXRVc2VySW5mbyAmIGFwaS5nZXRJbml0aWFsQ2FyZHMgY29tYmluZWQgd2l0aCBQcm9taXNlLlxuUHJvbWlzZS5hbGwoW2FwaS5nZXRVc2VySW5mbygpLCBhcGkuZ2V0SW5pdGlhbENhcmRzKCldKVxuICAudGhlbigoW3VzZXJEYXRhLCBjYXJkc10pID0+IHtcbiAgICB1c2VySWQgPSB1c2VyRGF0YS5faWQgIC8vdXNlckRhdGEuX3VzZXJJZFxuICAgIC8vY29uc29sZS5sb2coJ3VzZXIgPT4nLCB1c2VyRGF0YSlcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyh1c2VyRGF0YS5uYW1lLCAgdXNlckRhdGEuYWJvdXQsIHVzZXJEYXRhLmF2YXRhcilcbiAgICBzZWN0aW9uLnJlbmRlcmVySXRlbXMoY2FyZHMpXG4gIH0pXG4gIC5jYXRjaChjb25zb2xlLmxvZylcblxuLy9mb3JtIHZhbGlkYXRvciBzZXR0aW5ncyBkb20gcmVmZXJlbmNlcy8vXG5jb25zdCBlZGl0Rm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxuICBzZXR0aW5ncyxcbiAgIGVkaXRGb3JtXG4gICk7XG5jb25zdCBhZGRDYXJkRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxuICBzZXR0aW5ncyxcbiAgYWRkQ2FyZEZvcm1cbiAgKTtcblxuY29uc3QgYXZhdGFyRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxuICBzZXR0aW5ncyxcbiAgYXZhdGFyQ2hhbmdlXG4pO1xuXG4vLyBjb25zdCBjb25maXJtRGVsZXRlRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxuLy8gICBzZXR0aW5ncyxcbi8vICAgYXZhdGFyQ2hhbmdlXG4vLyApO1xuXG5lZGl0Rm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5hZGRDYXJkRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5hdmF0YXJGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbmVkaXRGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xuXG5cbi8vYWRkY2FyZHN1Ym1pdFxuY29uc3QgaGFuZGxlQ2FyZFN1Ym1pdCA9IChkYXRhKSA9PiB7XG4gIGFwaS5hZGRDYXJkKGRhdGEuY2FyZFRpdGxlLCBkYXRhLmNhcmRJbWFnZUxpbmspXG4gICAgLnRoZW4ocmVzID0+IHtcbiAgICAgIC8vY29uc29sZS5sb2coJ3JlcyA9PicsIHJlcylcbiAgICAgIGNvbnN0IGNhcmQgPSB7XG4gICAgICAgIG5hbWU6IHJlcy5uYW1lLFxuICAgICAgICBsaW5rOiByZXMubGluayxcbiAgICAgICAgbGlrZXM6IHJlcy5saWtlcyxcbiAgICAgICAgX2lkOiByZXMuX2lkLFxuICAgICAgfTtcbiAgICAgIHNlY3Rpb24uYWRkSXRlbShjYXJkKTtcbiAgICB9KVxuICAgIC5jYXRjaChjb25zb2xlLmxvZylcblxuICAgIGFkZENhcmRQb3B1cC5jbG9zZSgpO1xufVxuLy9lZGl0cHJvZmlsZSBzdWJtaXRcbmNvbnN0IGhhbmRsZVByb2ZpbGVGb3JtU3VibWl0ID0gKGRhdGEpID0+IHtcbiAgYXBpLmVkaXRQcm9maWxlKGRhdGEubmFtZSwgZGF0YS5wcm9mZXNzaW9uKVxuICAgIC50aGVuKCByZXMgPT4ge1xuICAgICAgdXNlckluZm8uc2V0VXNlckluZm8ocmVzLm5hbWUsIGRhdGEucHJvZmVzc2lvbiwgcmVzLmF2YXRhcilcbiAgICB9KVxuICAgIC5jYXRjaChjb25zb2xlLmxvZylcbiAgICAuZmluYWxseSggKCkgPT4ge1xuICAgICAgZWRpdFByb2ZpbGVQb3B1cC5jbG9zZSgpXG4gICAgfSlcbn07XG5cbi8vYXZhdGFyIFBpY3R1cmUgU3VibWl0XG5jb25zdCBoYW5kbGVBdmF0YXJTdWJtaXQgPSAoZGF0YSkgPT4ge1xuICBhcGkuZWRpdEF2YXRhciggZGF0YS5saW5rKVxuICAgIC50aGVuKCByZXMgPT4ge1xuICAgICAgdXNlckluZm8uc2V0VXNlckluZm8ocmVzLm5hbWUsIHJlcy5hYm91dCwgcmVzLmF2YXRhcilcbiAgICB9KVxuICAgIC5jYXRjaChjb25zb2xlLmxvZylcbiAgICAuZmluYWxseSggKCkgPT4ge1xuICAgICAgYXZhdGFyQ2hhbmdlUG9wdXAuY2xvc2UoKTtcbiAgICB9KVxufTtcblxuXG4vL2NvbmZpcm0gQ2FyZCBEZWxldGUgRnVuY3Rpb25cbmxldCBjYXJkVG9EZWxldGVcbmNvbnN0IGhhbmRsZURlbGV0ZUNsaWNrID0gKGNhcmQpID0+IHtcbiAgY29uZmlybUNhcmREZWxldGUub3BlbigpXG5cbiAgY2FyZFRvRGVsZXRlID0gY2FyZDtcbiAgY29uc29sZS5sb2coJ2lkID0+JywgY2FyZClcbn1cblxuXG5cbmNvbnN0IGVkaXRQcm9maWxlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSgnI3BvcHVwLXRlbXBsYXRlJywgaGFuZGxlUHJvZmlsZUZvcm1TdWJtaXQpXG5lZGl0UHJvZmlsZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKClcblxuY29uc3QgYXZhdGFyQ2hhbmdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSgnI3BvcHVwLXRlbXBsYXRlLWF2YXRhcicsIGhhbmRsZUF2YXRhclN1Ym1pdClcbmF2YXRhckNoYW5nZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKClcblxuY29uc3QgYWRkQ2FyZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oJyNwb3B1cC10ZW1wbGF0ZS1mb3JtJywgaGFuZGxlQ2FyZFN1Ym1pdClcbmFkZENhcmRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpIC8vb25seSBjYWxsIG9uY2VcblxuY29uc3QgY29uZmlybUNhcmREZWxldGUgPSBuZXcgUG9wdXBXaXRoRm9ybSgnI3BvcHVwLXRlbXBsYXRlLWNvbmZpcm0nLFxuICAgKCkgPT4ge1xuICBhcGkuZGVsZXRlQ2FyZChjYXJkVG9EZWxldGUuZ2V0SWQoKSlcbiAgLnRoZW4ocmVzID0+IHtcbiAgICBjYXJkVG9EZWxldGUucmVtb3ZlQ2FyZChyZXMpXG4gIH0pXG4gICAgY29uZmlybUNhcmREZWxldGUuY2xvc2UoKVxuICB9XG4pXG5jb25maXJtQ2FyZERlbGV0ZS5zZXRFdmVudExpc3RlbmVycygpXG5cbmNvbnN0IGltYWdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoJyNwb3B1cC1pbWFnZScpXG5pbWFnZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cblxuXG5jb25zdCBjcmVhdGVDYXJkID0gKGRhdGEpID0+IHtcbiAgY29uc3QgaXRlbSA9IG5ldyBDYXJkIChcbiAgICBkYXRhLFxuICAgIHVzZXJJZCxcbiAgICAnI2NhcmQtdGVtcGxhdGUnLFxuICAobmFtZSwgbGluaykgPT4geyAgIC8vNHRoIGNvbnN0cnVjdG9yIGl0ZW0gaGFuZGxlQ2FyZENsaWNrXG4gICAgaW1hZ2VQb3B1cC5vcGVuKG5hbWUsIGxpbmspXG4gICAgfSxcbiAgICAoKSA9PiB7ICAgLy81dGggIGNvbnN0cnVjdG9yIGl0ZW0gaGFuZGxlTGlrZUljb25cbiAgICAgIGlmKGl0ZW0uaXNMaWtlZCgpKSB7XG4gICAgICAgIGFwaS5yZW1vdmVMaWtlKGl0ZW0uZ2V0SWQoKSlcbiAgICAgICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgaXRlbS5zZXRMaWtlQ291bnRlcihyZXMubGlrZXMpXG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwieW91IGRvbid0IGxpa2UgaXRcIilcbiAgICAgICAgfSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGFwaS5hZGRMaWtlKGl0ZW0uZ2V0SWQoKSlcbiAgICAgICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgaXRlbS5zZXRMaWtlQ291bnRlcihyZXMubGlrZXMpXG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwieW91IGxpa2UgaXQhXCIpXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfSxcbiAgKGlkKSA9PiB7XG4gICAgICAvL2NvbmZpcm1DYXJkRGVsZXRlLm9wZW4oKVxuICAgICAgaGFuZGxlRGVsZXRlQ2xpY2soaWQpXG4gICAgfSAvLzZ0aCBjb25zdHJjdXRvciBpdGVtIGhhbmRsZURlbGV0ZUNsaWNrXG4gIClcblxuIHJldHVybiBpdGVtLmdlbmVyYXRlQ2FyZCgpO1xufVxuXG5jb25zdCBzZWN0aW9uID0gbmV3IFNlY3Rpb24oXG4gICAge1xuICAgICAgcmVuZGVyZXI6IGNyZWF0ZUNhcmRcbiAgICB9LFxuICAgICcuZWxlbWVudHNfX2NhcmRzJ1xuICApXG5cblxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oe1xuICBwcm9maWxlTmFtZVNlbGVjdG9yOiAnLnByb2ZpbGVfX2hlYWRlcicsXG4gIHByb2ZpbGVQcm9mZXNzaW9uU2VsZWN0b3I6ICcucHJvZmlsZV9fcHJvZmVzc2lvbicsXG4gIHByb2ZpbGVBdmF0YXI6ICcucHJvZmlsZV9faW1hZ2UnLFxufSlcblxuXG5mdW5jdGlvbiBvcGVuUHJvZmlsZVBvcHVwKCkge1xuICBjb25zdCBwcm9maWxlSW5mbyA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XG5cbiAgaW5wdXROYW1lLnZhbHVlID0gcHJvZmlsZUluZm8ubmFtZTtcbiAgaW5wdXRQcm9mZXNzaW9uLnZhbHVlID0gcHJvZmlsZUluZm8ucHJvZmVzc2lvbjtcblxuICBlZGl0Rm9ybVZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTsgLy8yIGtlcmUgbWkgcmVzZXRsZW5kaSBiYWthbMSxbVxuICBlZGl0Rm9ybVZhbGlkYXRvci5lbmFibGVCdXR0b24oKTtcbiAgZWRpdFByb2ZpbGVQb3B1cC5vcGVuKCk7XG59XG5cbi8vRXZlbnQgaGFuZGxlcnNcbmVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvcGVuUHJvZmlsZVBvcHVwKTtcblxuXG5cbmFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgYWRkQ2FyZEZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XG4gIGFkZENhcmRGb3JtVmFsaWRhdG9yLmRpc2FibGVCdXR0b24oKTtcbiAgYWRkQ2FyZFBvcHVwLm9wZW4oKTtcbn0pXG5cblxucHJvZmlsZUF2YXRhci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgYXZhdGFyRm9ybVZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTtcbiAgYXZhdGFyRm9ybVZhbGlkYXRvci5kaXNhYmxlQnV0dG9uKCk7XG4gIGF2YXRhckNoYW5nZVBvcHVwLm9wZW4oKTtcbn0pXG5cblxuIiwiXG5pbXBvcnQgeyBQb3B1cCB9IGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpXG4gICAgdGhpcy5fc3VidGl0bGUgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3N1YnRpdGxlJyk7XG4gICAgdGhpcy5faW1hZ2UgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ltYWdlJyk7XG4gIH1cblxuXG4gIG9wZW4obmFtZSwgbGluaykge1xuXG4gICAgc3VwZXIub3BlbigpXG4gICAgICB0aGlzLl9pbWFnZS5zcmMgPSBsaW5rO1xuICAgICAgdGhpcy5faW1hZ2UuYWx0ID0gbmFtZTtcbiAgICAgIHRoaXMuX3N1YnRpdGxlLnRleHRDb250ZW50ID0gbmFtZTtcblxuICB9XG5cbn1cbiIsIlxuZXhwb3J0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7IHJlbmRlcmVyIH0sIGNvbnRhaW5lciApIHtcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyKTtcbiAgfVxuXG5cblxuICByZW5kZXJlckl0ZW1zKGl0ZW1zKSB7XG4gICAgaXRlbXMuZm9yRWFjaCgoZGF0YSkgPT4ge1xuICAgICAgICB0aGlzLmFkZEl0ZW0oZGF0YSlcbiAgICB9KVxuICB9O1xuXG4gIGFkZEl0ZW0oZGF0YSkge1xuICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLl9yZW5kZXJlcihkYXRhKVxuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpXG4gIH07XG5cblxufVxuIiwiZXhwb3J0IGNsYXNzIFVzZXJJbmZvIHtcbiAgY29uc3RydWN0b3Ioe3Byb2ZpbGVOYW1lU2VsZWN0b3IsIHByb2ZpbGVQcm9mZXNzaW9uU2VsZWN0b3IsIHByb2ZpbGVBdmF0YXJ9KVxuICB7XG4gICAgdGhpcy5fcHJvZmlsZU5hbWU9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocHJvZmlsZU5hbWVTZWxlY3Rvcik7XG4gICAgdGhpcy5fcHJvZmlsZVByb2Zlc3Npb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHByb2ZpbGVQcm9mZXNzaW9uU2VsZWN0b3IpO1xuICAgIHRoaXMuX3Byb2ZpbGVBdmF0YXI9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocHJvZmlsZUF2YXRhcik7XG4gIH1cblxuICBnZXRVc2VySW5mbygpe1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiB0aGlzLl9wcm9maWxlTmFtZS50ZXh0Q29udGVudCxcbiAgICAgIHByb2Zlc3Npb246IHRoaXMuX3Byb2ZpbGVQcm9mZXNzaW9uLnRleHRDb250ZW50LFxuICAgICAgYXZhdGFyOiB0aGlzLl9wcm9maWxlQXZhdGFyLnN0eWxlLmJhY2tncm91bmRJbWFnZVxuICAgIH1cbiAgfVxuXG4gIHNldFVzZXJJbmZvKG5hbWUsIHByb2Zlc3Npb24sIGF2YXRhcikge1xuICAgIHRoaXMuX3Byb2ZpbGVOYW1lLnRleHRDb250ZW50ID0gbmFtZTtcbiAgICB0aGlzLl9wcm9maWxlUHJvZmVzc2lvbi50ZXh0Q29udGVudCA9IHByb2Zlc3Npb247XG4gICAgdGhpcy5fcHJvZmlsZUF2YXRhci5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSBgdXJsKCR7YXZhdGFyfSlgO1xuICB9XG5cblxufVxuIl0sIm5hbWVzIjpbInByb2ZpbGVBdmF0YXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJwcm9maWxlUG9wdXAiLCJlZGl0QnV0dG9uIiwiaW5wdXROYW1lIiwiaW5wdXRQcm9mZXNzaW9uIiwiYWRkQnV0dG9uIiwic2V0dGluZ3MiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImVkaXRGb3JtIiwiYWRkQ2FyZEZvcm0iLCJhdmF0YXJDaGFuZ2UiLCJjb25zdHJ1Y3RvciIsImZvcm1FbGVtZW50IiwiaW5wdXQiLCJlcnJvck1lc3NhZ2UiLCJ0aGlzIiwiX3NldHRpbmdzIiwiZXJyb3JFbGVtZW50IiwiX2Zvcm1FbGVtZW50IiwiaWQiLCJjbGFzc0xpc3QiLCJhZGQiLCJ0ZXh0Q29udGVudCIsInJlbW92ZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImlucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfdG9nZ2xlQnV0dG9uIiwiZm9yRWFjaCIsImFkZEV2ZW50TGlzdGVuZXIiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiZXZlcnkiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9oYXNWYWxpZElucHV0IiwiZW5hYmxlQnV0dG9uIiwiZGlzYWJsZUJ1dHRvbiIsIl9zdWJtaXRCdXR0b24iLCJkaXNhYmxlZCIsInJlc2V0VmFsaWRhdGlvbiIsImVuYWJsZVZhbGlkYXRpb24iLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsIl9zZXRFdmVudExpc3RlbmVycyIsIkNhcmQiLCJkYXRhIiwidXNlcklkIiwidGVtcGxhdGVDYXJkU2VsZWN0b3IiLCJoYW5kbGVDYXJkQ2xpY2siLCJoYW5kbGVMaWtlSWNvbiIsImhhbmRsZURlbGV0ZUNsaWNrIiwiY29uc29sZSIsImxvZyIsIl9kYXRhIiwiX25hbWUiLCJuYW1lIiwiX2xpbmsiLCJsaW5rIiwiX2xpa2VzIiwibGlrZXMiLCJfaWQiLCJfdXNlcklkIiwiX293bmVySWQiLCJvd25lciIsIl90ZW1wbGF0ZUNhcmRTZWxlY3RvciIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfaGFuZGxlTGlrZUljb24iLCJfaGFuZGxlRGVsZXRlQ2xpY2siLCJnZXRJZCIsIl9nZXRUZW1wbGF0ZSIsImNvbnRlbnQiLCJfYWRkRXZlbnRMaXN0ZW5lcnMiLCJfbGlrZUJ1dHRvbiIsIl9kZWxldGVCdXR0b24iLCJfY2FyZEltYWdlIiwicmVtb3ZlQ2FyZCIsIl9jYXJkRWxlbWVudCIsInNldExpa2VDb3VudGVyIiwibmV3TGlrZXMiLCJsaWtlQ291bnRlciIsImxlbmd0aCIsImlzTGlrZWQiLCJmaW5kIiwidXNlciIsImdlbmVyYXRlQ2FyZCIsImNsb25lTm9kZSIsIl9jYXJkTmFtZSIsInNyYyIsImFsdCIsInN0eWxlIiwiZGlzcGxheSIsIlBPUFVQX1NFTEVDVE9SX0NMQVNTIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwIiwiX2hhbmRsZUVzY0Nsb3NlIiwiYmluZCIsImtleSIsImNsb3NlIiwib3BlbiIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJzZXRFdmVudExpc3RlbmVycyIsInRhcmdldCIsImNvbnRhaW5zIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZVN1Ym1pdEZvcm0iLCJzdXBlciIsIl9oYW5kbGVTdWJtaXRGb3JtIiwiX2Zvcm0iLCJfaW5wdXRzIiwiX2dldElucHV0VmFsdWVzIiwidmFsdWVzIiwidmFsdWUiLCJlIiwic2V0SW5wdXRWYWx1ZXMiLCJyZXNldCIsImFwaSIsIm9wdGlvbnMiLCJfYmFzZVVybCIsImJhc2VVcmwiLCJfaGVhZGVycyIsImhlYWRlcnMiLCJnZXRVc2VySW5mbyIsImZldGNoIiwidGhlbiIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXNUZXh0IiwiZWRpdFByb2ZpbGUiLCJhYm91dCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZWRpdEF2YXRhciIsImF2YXRhciIsImdldEluaXRpYWxDYXJkcyIsImFkZENhcmQiLCJhZGRMaWtlIiwicmVtb3ZlTGlrZSIsImRlbGV0ZUNhcmQiLCJhdXRob3JpemF0aW9uIiwiYWxsIiwidXNlckRhdGEiLCJjYXJkcyIsInVzZXJJbmZvIiwic2V0VXNlckluZm8iLCJzZWN0aW9uIiwicmVuZGVyZXJJdGVtcyIsImNhdGNoIiwiZWRpdEZvcm1WYWxpZGF0b3IiLCJGb3JtVmFsaWRhdG9yIiwiYWRkQ2FyZEZvcm1WYWxpZGF0b3IiLCJhdmF0YXJGb3JtVmFsaWRhdG9yIiwiY2FyZFRvRGVsZXRlIiwiZWRpdFByb2ZpbGVQb3B1cCIsInByb2Zlc3Npb24iLCJmaW5hbGx5IiwiYXZhdGFyQ2hhbmdlUG9wdXAiLCJhZGRDYXJkUG9wdXAiLCJjYXJkVGl0bGUiLCJjYXJkSW1hZ2VMaW5rIiwiY2FyZCIsImFkZEl0ZW0iLCJjb25maXJtQ2FyZERlbGV0ZSIsImltYWdlUG9wdXAiLCJfc3VidGl0bGUiLCJfaW1hZ2UiLCJjb250YWluZXIiLCJyZW5kZXJlciIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJpdGVtcyIsImVsZW1lbnQiLCJwcmVwZW5kIiwiaXRlbSIsInByb2ZpbGVOYW1lU2VsZWN0b3IiLCJwcm9maWxlUHJvZmVzc2lvblNlbGVjdG9yIiwiX3Byb2ZpbGVOYW1lIiwiX3Byb2ZpbGVQcm9mZXNzaW9uIiwiX3Byb2ZpbGVBdmF0YXIiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJwcm9maWxlSW5mbyJdLCJzb3VyY2VSb290IjoiIn0=