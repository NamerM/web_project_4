!function(){"use strict";const e=document.querySelector(".profile__image"),t=document.querySelector(".popup_type_profile"),s=document.querySelector(".profile__button"),i=(t.querySelector(".popup__close"),t.querySelector(".popup__input_type_name")),r=t.querySelector(".popup__input_type_profession"),n=document.querySelector(".add-button");function o(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}document.querySelector(".elements__cards"),document.querySelector(".popup__form_edit"),document.querySelector(".popup__form_cards"),document.querySelector(".popup__form_avatar");class a{constructor(e,t){o(this,"_showInputError",((e,t)=>{const{inputErrorClass:s,errorClass:i}=this._settings,r=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(i),r.textContent=t,r.classList.add(s)})),o(this,"_hideInputError",(e=>{const{inputErrorClass:t,errorClass:s}=this._settings,i=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(s),i.classList.remove(t),i.textContent=""})),o(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)})),o(this,"_setEventListeners",(()=>{const{inputSelector:e}=this._settings;this.inputList=Array.from(this._formElement.querySelectorAll(e)),this._toggleButton(),this.inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButton()}))}))})),o(this,"_hasValidInput",(()=>this.inputList.every((e=>e.validity.valid)))),o(this,"_toggleButton",(()=>{const{inactiveButtonClass:e}=this._settings;this._inactiveButtonClass=e,this._hasValidInput()?this.enableButton():this.disableButton()})),o(this,"enableButton",(()=>{this._submitButton.disabled=!1,this._submitButton.classList.remove(this._inactiveButtonClass)})),o(this,"disableButton",(()=>{this._submitButton.disabled=!0,this._submitButton.classList.add(this._inactiveButtonClass)})),this._settings=e,this._formElement=t,this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector)}resetValidation(){this.inputList.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class l{constructor(e,t,s,i,r,n){this._data=e,this._name=e.name,this._link=e.link,this._likes=e.likes,this._id=e._id,this._userId=t,this._ownerId=e.owner._id,this._templateCardSelector=s,this._handleCardClick=i,this._handleLikeIcon=r,this._handleDeleteClick=n}getId(){return this._id}_getTemplate(){return document.querySelector(this._templateCardSelector).content.querySelector(".elements__card")}_addEventListeners(){this._likeButton.addEventListener("click",(()=>this._handleLikeIcon())),this._deleteButton.addEventListener("click",(()=>this._handleDeleteClick(this))),this._cardImage.addEventListener("click",(()=>this._handleCardClick(this._name,this._link)))}removeCard(){this._cardElement.remove(),this._cardElement=null}setLikeCounter(e){this._likes=e;const t=this._likes.length;this._cardLikeCounter.textContent=t,this.isLiked()?this._likeButton.classList.add("elements__button-like_active"):this._likeButton.classList.remove("elements__button-like_active")}isLiked(){return this._likes.find((e=>e._id===this._userId))}generateCard(){return this._cardElement=this._getTemplate().cloneNode(!0),this._cardImage=this._cardElement.querySelector(".elements__image"),this._cardName=this._cardElement.querySelector(".elements__card-text"),this._likeButton=this._cardElement.querySelector(".elements__button-like"),this._deleteButton=this._cardElement.querySelector(".elements__button-delete"),this._cardLikeCounter=this._cardElement.querySelector(".elements__card_likes"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardName.textContent=this._name,this._addEventListeners(),this.setLikeCounter(this._likes),this._userId!==this._ownerId&&(this._deleteButton.style.display="none"),this._cardElement}}const c="popup_open";class h{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}open(){this._popup.classList.add(c),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove(c),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popup.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&this.close()}))}}class _ extends h{constructor(e,t){super(e),this._handleSubmitForm=t,this._form=this._popup.querySelector(".popup__form"),this._inputs=this._form.querySelectorAll(".popup__input"),this._submitButton=this._popup.querySelector(".popup__save")}_getInputValues(){const e={};return this._inputs.forEach((t=>{const s=t.id,i=t.value;e[s]=i})),e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmitForm(this._getInputValues())}))}setInputValues(e){this._inputs.forEach((t=>{t.value=e[t.name]}))}changeSubmitHandler(e){this._handleSubmitForm=e}changeText(e){const t=this._submitButton;"Saving"===e&&(t.textContent="Saving..."),"Default"===e&&(t.textContent="Save")}close(){super.close(),this._form.reset()}}function d(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}const u=new class{constructor(e){d(this,"editProfile",((e,t)=>fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse))),d(this,"addLike",(e=>fetch(this._baseUrl+"/cards/likes/"+e,{method:"PUT",headers:this._headers}).then(this._checkResponse))),d(this,"removeLike",(e=>fetch(this._baseUrl+"/cards/likes/"+e,{method:"DELETE",headers:this._headers}).then(this._checkResponse))),this._baseUrl=e.baseUrl,this._headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject(e.StatusText)}getUserInfo(){return fetch(this._baseUrl+"/users/me",{headers:this._headers}).then(this._checkResponse)}editAvatar(e){return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}getInitialCards(){return fetch(this._baseUrl+"/cards",{headers:this._headers}).then(this._checkResponse)}addCard(e,t){return fetch(this._baseUrl+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._checkResponse)}deleteCard(e){return fetch(this._baseUrl+"/cards/"+e,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"9398a483-484e-4ebd-a374-b6b3b985e9c4","Content-Type":"application/json"}});let p;Promise.all([u.getUserInfo(),u.getInitialCards()]).then((e=>{let[t,s]=e;p=t._id,L.setUserInfo(t.name,t.about,t.avatar),S.rendererItems(s)})).catch(console.log);const m={};var f;f={inputSelector:".popup__input",submitButtonSelector:".popup__save",inactiveButtonClass:"popup__save_disabled",inputErrorClass:"popup__input-error_open",errorClass:"popup__error_visible",formSelector:".popup__form"},Array.from(document.querySelectorAll(f.formSelector)).forEach((e=>{const t=new a(f,e),s=e.getAttribute("name");m[s]=t,t.enableValidation()}));const v=e=>{E.open(),E.changeSubmitHandler((()=>{u.deleteCard(e.getId()).then((()=>{e.removeCard()})).then((()=>{E.close()})).catch(console.log)}))},g=new _("#popup-template",(e=>{g.changeText("Saving"),u.editProfile(e.name,e.profession).then((t=>{L.setUserInfo(t.name,e.profession,t.avatar)})).then((e=>{g.close(e)})).catch(console.log).finally((()=>{g.changeText("Default")}))}));g.setEventListeners();const b=new _("#popup-template-avatar",(e=>{b.changeText("Saving"),u.editAvatar(e.link).then((e=>{L.setUserInfo(e.name,e.about,e.avatar)})).then((e=>{b.close(e)})).catch(console.log).finally((()=>{b.changeText("Default")}))}));b.setEventListeners();const k=new _("#popup-template-form",(e=>{k.changeText("Saving"),u.addCard(e.cardTitle,e.cardImageLink).then((e=>{S.addItem(e)})).then((e=>{k.close(e)})).catch(console.log).finally((()=>{k.changeText("Default")}))}));k.setEventListeners();const E=new _("#popup-template-confirm",v);E.setEventListeners();const y=new class extends h{constructor(e){super(e),this._subtitle=this._popup.querySelector(".popup__subtitle"),this._image=this._popup.querySelector(".popup__image")}open(e,t){super.open(),this._image.src=t,this._image.alt=e,this._subtitle.textContent=e}}("#popup-image");y.setEventListeners();const S=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}rendererItems(e){e.forEach((e=>{this.addItem(e)}))}addItem(e){const t=this._renderer(e);this._container.prepend(t)}}({renderer:e=>{const t=new l(e,p,"#card-template",(()=>(e=>{y.open(e.name,e.link)})(e)),(()=>{var e;((e=t).isLiked()?u.removeLike:u.addLike)(e.getId()).then((t=>{e.setLikeCounter(t.likes)})).catch(console.log)}),(e=>v(e)));return t.generateCard()}},".elements__cards"),L=new class{constructor(e){let{profileNameSelector:t,profileProfessionSelector:s,profileAvatar:i}=e;this._profileName=document.querySelector(t),this._profileProfession=document.querySelector(s),this._profileAvatar=document.querySelector(i)}getUserInfo(){return{name:this._profileName.textContent,profession:this._profileProfession.textContent,avatar:this._profileAvatar.style.backgroundImage}}setUserInfo(e,t,s){this._profileName.textContent=e,this._profileProfession.textContent=t,this._profileAvatar.style.backgroundImage="url(".concat(s,")")}}({profileNameSelector:".profile__header",profileProfessionSelector:".profile__profession",profileAvatar:".profile__image"});s.addEventListener("click",(function(){const e=L.getUserInfo();i.value=e.name,r.value=e.profession,g.open()})),m.profileForm.resetValidation(),m.profileForm.enableButton(),n.addEventListener("click",(()=>{k.open(),m["add-cards"].resetValidation(),m["add-cards"].disableButton()})),e.addEventListener("click",(()=>{b.open(),m.avatarChange.resetValidation(),m.avatarChange.disableButton()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,