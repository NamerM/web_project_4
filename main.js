!function(){"use strict";const e=document.querySelector(".profile__image"),t=document.querySelector(".popup_type_profile"),s=document.querySelector(".profile__button"),i=(t.querySelector(".popup__close"),t.querySelector(".popup__input_type_name")),r=t.querySelector(".popup__input_type_profession"),n=document.querySelector(".add-button"),o=(document.querySelector(".elements__cards"),{inputSelector:".popup__input",submitButtonSelector:".popup__save",inactiveButtonClass:"popup__save_disabled",inputErrorClass:"popup__input-error_open",errorClass:"popup__error_visible"}),a=document.querySelector(".popup__form_edit"),l=document.querySelector(".popup__form_cards"),c=document.querySelector(".popup__form_avatar");function h(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var d=class{constructor(e,t){h(this,"_showInputError",((e,t)=>{const{inputErrorClass:s,errorClass:i}=this._settings,r=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(i),r.textContent=t,r.classList.add(s)})),h(this,"_hideInputError",(e=>{const{inputErrorClass:t,errorClass:s}=this._settings,i=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(s),i.classList.remove(t),i.textContent=""})),h(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)})),h(this,"_setEventListeners",(()=>{const{inputSelector:e}=this._settings;this.inputList=Array.from(this._formElement.querySelectorAll(e)),this._toggleButton(),this.inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButton()}))}))})),h(this,"_hasValidInput",(()=>this.inputList.every((e=>e.validity.valid)))),h(this,"_toggleButton",(()=>{const{inactiveButtonClass:e}=this._settings;this._inactiveButtonClass=e,this._hasValidInput()?this.enableButton():this.disableButton()})),h(this,"enableButton",(()=>{this._submitButton.disabled=!1,this._submitButton.classList.remove(this._inactiveButtonClass)})),h(this,"disableButton",(()=>{this._submitButton.disabled=!0,this._submitButton.classList.add(this._inactiveButtonClass)})),this._settings=e,this._formElement=t,this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector)}resetValidation(){this.inputList.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class u{constructor(e,t,s,i,r,n){this._data=e,this._name=e.name,this._link=e.link,this._likes=e.likes,this._id=e._id,this._userId=t,this._ownerId=e.owner._id,this._templateCardSelector=s,this._handleCardClick=i,this._handleLikeIcon=r,this._handleDeleteClick=n}getId(){return this._id}_getTemplate(){return document.querySelector(this._templateCardSelector).content.querySelector(".elements__card")}_addEventListeners(){this._likeButton.addEventListener("click",(()=>this._handleLikeIcon())),this._deleteButton.addEventListener("click",(()=>this._handleDeleteClick(this))),this._cardImage.addEventListener("click",(()=>this._handleCardClick(this._name,this._link)))}removeCard(){this._cardElement.remove(),this._cardElement=null}setLikeCounter(e){this._likes=e;const t=this._likes.length;this._cardElement.querySelector(".elements__card_likes").textContent=t,this.isLiked()?this._likeButton.classList.add("elements__button-like_active"):this._likeButton.classList.remove("elements__button-like_active")}isLiked(){return this._likes.find((e=>e._id===this._userId))}generateCard(){return this._cardElement=this._getTemplate().cloneNode(!0),this._cardImage=this._cardElement.querySelector(".elements__image"),this._cardName=this._cardElement.querySelector(".elements__card-text"),this._likeButton=this._cardElement.querySelector(".elements__button-like"),this._deleteButton=this._cardElement.querySelector(".elements__button-delete"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardName.textContent=this._name,this._addEventListeners(),this.setLikeCounter(this._likes),this._userId!==this._ownerId&&(this._deleteButton.style.display="none"),this._cardElement}}const _="popup_open";class p{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}open(){this._popup.classList.add(_),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove(_),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popup.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&this.close()}))}}class m extends p{constructor(e,t){super(e),this._handleSubmitForm=t,this._form=this._popup.querySelector(".popup__form"),this._inputs=this._form.querySelectorAll(".popup__input")}_getInputValues(){const e={};return this._inputs.forEach((t=>{const s=t.id,i=t.value;e[s]=i})),e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmitForm(this._getInputValues())}))}setInputValues(e){this._inputs.forEach((t=>{t.value=e[t.name]}))}changeSubmitHandler(e){this._handleSubmitForm=e}changeText(e){const t=this._popup.querySelector(".popup__save");"Saving"===e&&(t.textContent="Saving..."),"Default"===e&&(t.textContent="Save")}close(){super.close(),this._form.reset()}}const f=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}getUserInfo(){return fetch(this._baseUrl+"/users/me",{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}editProfile(e,t){return fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}editAvatar(e){return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}getInitialCards(){return fetch(this._baseUrl+"/cards",{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}addCard(e,t){return fetch(this._baseUrl+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}addLike(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"PUT",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}removeLike(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}deleteCard(e){return fetch(this._baseUrl+"/cards/"+e,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"9398a483-484e-4ebd-a374-b6b3b985e9c4","Content-Type":"application/json"}});let v;Promise.all([f.getUserInfo(),f.getInitialCards()]).then((e=>{let[t,s]=e;v=t._id,x.setUserInfo(t.name,t.about,t.avatar),q.rendererItems(s)})).catch(console.log);const g=new d(o,a),b=new d(o,l),k=new d(o,c);g.enableValidation(),b.enableValidation(),k.enableValidation(),g.resetValidation();const E=e=>{C.open(),C.changeSubmitHandler((()=>{f.deleteCard(e.getId()).then((()=>{e.removeCard()})),C.close()}))},y=new m("#popup-template",(e=>{y.changeText("Saving"),f.editProfile(e.name,e.profession).then((t=>{x.setUserInfo(t.name,e.profession,t.avatar),y.changeText("Default")})).catch(console.log).finally((()=>{y.close()}))}));y.setEventListeners();const S=new m("#popup-template-avatar",(e=>{S.changeText("Saving"),f.editAvatar(e.link).then((e=>{x.setUserInfo(e.name,e.about,e.avatar),S.changeText("Default")})).catch(console.log).finally((()=>{S.close()}))}));S.setEventListeners();const L=new m("#popup-template-form",(e=>{L.changeText("Saving"),f.addCard(e.cardTitle,e.cardImageLink).then((e=>{q.addItem(e),L.changeText("Default")})).catch(console.log),L.close()}));L.setEventListeners();const C=new m("#popup-template-confirm",E);C.setEventListeners();const I=new class extends p{constructor(e){super(e),this._subtitle=this._popup.querySelector(".popup__subtitle"),this._image=this._popup.querySelector(".popup__image")}open(e,t){super.open(),this._image.src=t,this._image.alt=e,this._subtitle.textContent=e}}("#popup-image");I.setEventListeners();const q=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}rendererItems(e){e.forEach((e=>{this.addItem(e)}))}addItem(e){const t=this._renderer(e);this._container.prepend(t)}}({renderer:e=>{const t=new u(e,v,"#card-template",(()=>(e=>{I.open(e.name,e.link)})(e)),(()=>{var e;(e=t).isLiked()?f.removeLike(e.getId()).then((t=>{e.setLikeCounter(t.likes)})):f.addLike(e.getId()).then((t=>{e.setLikeCounter(t.likes)}))}),(e=>E(e)));return t.generateCard()}},".elements__cards"),x=new class{constructor(e){let{profileNameSelector:t,profileProfessionSelector:s,profileAvatar:i}=e;this._profileName=document.querySelector(t),this._profileProfession=document.querySelector(s),this._profileAvatar=document.querySelector(i)}getUserInfo(){return{name:this._profileName.textContent,profession:this._profileProfession.textContent,avatar:this._profileAvatar.style.backgroundImage}}setUserInfo(e,t,s){this._profileName.textContent=e,this._profileProfession.textContent=t,this._profileAvatar.style.backgroundImage="url(".concat(s,")")}}({profileNameSelector:".profile__header",profileProfessionSelector:".profile__profession",profileAvatar:".profile__image"});s.addEventListener("click",(function(){const e=x.getUserInfo();i.value=e.name,r.value=e.profession,g.resetValidation(),g.enableButton(),y.open()})),n.addEventListener("click",(()=>{b.resetValidation(),b.disableButton(),L.open()})),e.addEventListener("click",(()=>{k.resetValidation(),k.disableButton(),S.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,