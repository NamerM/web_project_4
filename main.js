!function(){"use strict";const e=document.querySelector(".profile__info"),t=(e.querySelector(".profile__header"),e.querySelector(".profile__profession"),document.querySelectorAll(".popup"),document.querySelector(".profile__image")),s=(document.forms.profileForm,document.querySelector(".popup_type_profile")),r=document.querySelector(".profile__button"),i=(s.querySelector(".popup__close"),s.querySelector(".popup__input_type_name")),o=s.querySelector(".popup__input_type_profession"),n=document.querySelector(".popup_type-preview"),a=(document.querySelector(".popup_type_add-card"),document.querySelector(".add-button")),l=(document.querySelector(".popup__close.popup__close_preview"),document.querySelector(".popup__close.popup__close_add"),document.querySelector(".popup__input_type_title"),document.querySelector(".popup__input_type_link"),n.querySelector(".popup__image"),n.querySelector(".popup__subtitle"),document.querySelector(".elements__cards"),{inputSelector:".popup__input",submitButtonSelector:".popup__save",inactiveButtonClass:"popup__save_disabled",inputErrorClass:"popup__input-error_open",errorClass:"popup__error_visible"}),c=document.querySelector(".popup__form_edit"),u=document.querySelector(".popup__form_cards"),_=document.querySelector(".popup__form_avatar");function d(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var p=class{constructor(e,t){d(this,"_showInputError",((e,t)=>{const{inputErrorClass:s,errorClass:r}=this._settings,i=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(r),i.textContent=t,i.classList.add(s)})),d(this,"_hideInputError",(e=>{const{inputErrorClass:t,errorClass:s}=this._settings,r=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(s),r.classList.remove(t),r.textContent=""})),d(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)})),d(this,"_setEventListeners",(()=>{const{inputSelector:e}=this._settings;this.inputList=Array.from(this._formElement.querySelectorAll(e)),this._toggleButton(),this.inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButton()}))}))})),d(this,"_hasValidInput",(()=>this.inputList.every((e=>e.validity.valid)))),d(this,"_toggleButton",(()=>{const{inactiveButtonClass:e}=this._settings;this._inactiveButtonClass=e,this._hasValidInput()?this.enableButton():this.disableButton()})),d(this,"enableButton",(()=>{this._submitButton.disabled=!1,this._submitButton.classList.remove(this._inactiveButtonClass)})),d(this,"disableButton",(()=>{this._submitButton.disabled=!0,this._submitButton.classList.add(this._inactiveButtonClass)})),this._settings=e,this._formElement=t,this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector)}resetValidation(){this.inputList.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};function h(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class m{constructor(e,t,s,r,i){h(this,"_handleCardDelete",(()=>{this._cardElement.remove()})),h(this,"_addEventListeners",(()=>{this._likeButton.addEventListener("click",(()=>this._handleLikeIcon())),this._deleteButton.addEventListener("click",(()=>this._handleCardDelete())),this._cardImage.addEventListener("click",(()=>this._handleCardClick(this._name,this._link)))})),this._data=e,this._name=e.name,this._link=e.link,this._likes=e.likes,this._id=e._id,this._userId=t,this._templateCardSelector=s,this._handleCardClick=r,this._handleLikeIcon=i}getId(){return this._id}_getTemplate(){return document.querySelector(this._templateCardSelector).content.querySelector(".elements__card")}setLikeCounter(e){this._likes=e;const t=this._likes.length;this._cardElement.querySelector(".elements__card_likes").textContent=t,this.isLiked()?this._likeButton.classList.add("elements__button-like_active"):this._likeButton.classList.remove("elements__button-like_active")}isLiked(){return this._likes.find((e=>e._id===this._userId))}generateCard(){return this._cardElement=this._getTemplate().cloneNode(!0),this._cardImage=this._cardElement.querySelector(".elements__image"),this._cardName=this._cardElement.querySelector(".elements__card-text"),this._likeButton=this._cardElement.querySelector(".elements__button-like"),this._deleteButton=this._cardElement.querySelector(".elements__button-delete"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardName.textContent=this._name,this._addEventListeners(),this.setLikeCounter(this._likes),this._cardElement}}const f="popup_open";class v{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}open(){this._popup.classList.add(f),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove(f),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popup.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&this.close()}))}}class y extends v{constructor(e,t){super(e),this._handleSubmitForm=t,this._form=this._popup.querySelector(".popup__form"),this._inputs=this._form.querySelectorAll(".popup__input")}_getInputValues(){const e={};return this._inputs.forEach((t=>{const s=t.id,r=t.value;e[s]=r})),e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{console.log("!!!!"),e.preventDefault(),this._handleSubmitForm(this._getInputValues())}))}setInputValues(e){this._inputs.forEach((t=>{t.value=e[t.name]}))}close(){super.close(),this._form.reset()}}const b=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}getUserInfo(){return fetch(this._baseUrl+"/users/me",{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}editProfile(e,t){return fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}editAvatar(e){return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}getInitialCards(){return fetch(this._baseUrl+"/cards",{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}addCard(e,t){return fetch(this._baseUrl+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}addLike(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"PUT",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}removeLike(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"9398a483-484e-4ebd-a374-b6b3b985e9c4","Content-Type":"application/json"}});let k;Promise.all([b.getUserInfo(),b.getInitialCards()]).then((e=>{let[t,s]=e;k=t._id,console.log("user =>",t),P.setUserInfo(t.name,t.about,t.avatar),B.rendererItems(s)})).catch(console.log);const g=new p(l,c),E=new p(l,u),S=new p(l,_);g.enableValidation(),E.enableValidation(),S.enableValidation(),g.resetValidation();const L=new y("#popup-template",(e=>{b.editProfile(e.name,e.profession).then((t=>{P.setUserInfo(t.name,e.profession,t.avatar)})).catch(console.log).finally((()=>{L.close()}))}));L.setEventListeners();const C=new y("#popup-template-avatar",(e=>{b.editAvatar(e.link).then((e=>{P.setUserInfo(e.name,e.profession,e.avatar)})).catch(console.log).finally((()=>{C.close()}))}));C.setEventListeners();const q=new y("#popup-template-form",(e=>{b.addCard(e.cardTitle,e.cardImageLink).then((e=>{const t={name:e.name,link:e.link,likes:e.likes,_id:e._id};B.addItem(t)})).catch(console.log),q.close()}));q.setEventListeners();const I=new class extends v{constructor(e){super(e),this._subtitle=this._popup.querySelector(".popup__subtitle"),this._image=this._popup.querySelector(".popup__image")}open(e,t){super.open(),this._image.src=t,this._image.alt=e,this._subtitle.textContent=e}}("#popup-image");I.setEventListeners();const B=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}rendererItems(e){e.forEach((e=>{this.addItem(e)}))}addItem(e){const t=this._renderer(e);this._container.prepend(t)}}({renderer:e=>{const t=new m(e,k,"#card-template",((e,t)=>{I.open(e,t)}),(()=>{t.isLiked()?b.removeLike(t.getId()).then((e=>{t.setLikeCounter(e.likes)})):b.addLike(t.getId()).then((e=>{t.setLikeCounter(e.likes)}))}));return t.generateCard()}},".elements__cards"),P=new class{constructor(e){let{profileNameSelector:t,profileProfessionSelector:s,profileAvatar:r}=e;this._profileName=document.querySelector(t),this._profileProfession=document.querySelector(s),this._profileAvatar=document.querySelector(r)}getUserInfo(){return{name:this._profileName.textContent,profession:this._profileProfession.textContent,avatar:this._profileAvatar.style.backgroundImage}}setUserInfo(e,t,s){this._profileName.textContent=e,this._profileProfession.textContent=t,this._profileAvatar.style.backgroundImage="url(".concat(s,")")}}({profileNameSelector:".profile__header",profileProfessionSelector:".profile__profession",profileAvatar:".profile__image"});r.addEventListener("click",(function(){const e=P.getUserInfo();i.value=e.name,o.value=e.profession,g.resetValidation(),g.enableButton(),L.open()})),a.addEventListener("click",(()=>{E.resetValidation(),E.disableButton(),q.open()})),t.addEventListener("click",(()=>{S.resetValidation(),S.disableButton(),C.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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IndlYnBhY2s6Ly95YW5kZXgucHJhY3RpY3VtLnByb2plY3QvLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3lhbmRleC5wcmFjdGljdW0ucHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8veWFuZGV4LnByYWN0aWN1bS5wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly95YW5kZXgucHJhY3RpY3VtLnByb2plY3QvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly95YW5kZXgucHJhY3RpY3VtLnByb2plY3QvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3lhbmRleC5wcmFjdGljdW0ucHJvamVjdC8uL3NyYy91dGlscy9BcGkuanMiLCJ3ZWJwYWNrOi8veWFuZGV4LnByYWN0aWN1bS5wcm9qZWN0Ly4vc3JjL3BhZ2UvaW5kZXguanMiLCJ3ZWJwYWNrOi8veWFuZGV4LnByYWN0aWN1bS5wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8veWFuZGV4LnByYWN0aWN1bS5wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly95YW5kZXgucHJhY3RpY3VtLnByb2plY3QvLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvL0ZvciBQcm9maWxlIGFuZCBwb3B1cCBlbGVtZW50c1xuY29uc3QgcHJvZmlsZUluZm8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2luZm9cIik7XG5jb25zdCBwcm9maWxlTmFtZSA9IHByb2ZpbGVJbmZvLnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9faGVhZGVyXCIpO1xuY29uc3QgcHJvZmlsZVByb2Zlc3Npb24gPSBwcm9maWxlSW5mby5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3Byb2Zlc3Npb25cIik7XG5jb25zdCBwb3B1cExpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwXCIpO1xuY29uc3QgcHJvZmlsZUF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9faW1hZ2VcIik7XG5cbmNvbnN0IHByb2ZpbGVGb3JtID0gZG9jdW1lbnQuZm9ybXMucHJvZmlsZUZvcm07IC8vcXVlcnlTZWxlY3RvcignLnBvcHVwX2Zvcm0nKTsvL1xuY29uc3QgcHJvZmlsZVBvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX3Byb2ZpbGVcIik7IC8vLnBvcHVwIGJhc3Rha2kgc2lsaW5kaVxuY29uc3QgZWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYnV0dG9uXCIpO1xuY29uc3QgY2xvc2VCdXR0b24gPSBwcm9maWxlUG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fY2xvc2VcIik7XG5jb25zdCBpbnB1dE5hbWUgPSBwcm9maWxlUG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW5wdXRfdHlwZV9uYW1lXCIpO1xuY29uc3QgaW5wdXRQcm9mZXNzaW9uID0gcHJvZmlsZVBvcHVwLnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLnBvcHVwX19pbnB1dF90eXBlX3Byb2Zlc3Npb25cIlxuKTtcbmNvbnN0IHBvcHVwU2VsZWN0b3IgPSBcInBvcHVwX29wZW5cIjtcblxuLy8gLy8vLy9DQVJEU1xuY29uc3QgQ2FyZF9UZW1wbGF0ZV9TZWxlY3RvciA9IFwiI2NhcmQtdGVtcGxhdGVcIjtcbmNvbnN0IHByZXZpZXdJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfdHlwZS1wcmV2aWV3XCIpO1xuXG5jb25zdCBjYXJkUG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX3R5cGVfYWRkLWNhcmRcIik7XG5jb25zdCBhZGRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFkZC1idXR0b25cIik7XG5jb25zdCBwcmV2aWV3QnV0dG9uQ2xvc2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICBcIi5wb3B1cF9fY2xvc2UucG9wdXBfX2Nsb3NlX3ByZXZpZXdcIlxuKTtcbmNvbnN0IGJ1dHRvbkNsb3NlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fY2xvc2UucG9wdXBfX2Nsb3NlX2FkZFwiKTtcbmNvbnN0IGlucHV0VGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbnB1dF90eXBlX3RpdGxlXCIpO1xuY29uc3QgaW5wdXRJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2lucHV0X3R5cGVfbGlua1wiKTtcbmNvbnN0IHBvcHVwSW1hZ2UgPSBwcmV2aWV3SW1hZ2UucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW1hZ2VcIik7XG5jb25zdCBwb3B1cFRpdGxlID0gcHJldmlld0ltYWdlLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX3N1YnRpdGxlXCIpO1xuLy8gV3JhcHBlcnNcbmNvbnN0IGVsZW1lbnRzTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudHNfX2NhcmRzXCIpO1xuXG5jb25zdCBzZXR0aW5ncyA9IHtcbiAgaW5wdXRTZWxlY3RvcjogXCIucG9wdXBfX2lucHV0XCIsXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5wb3B1cF9fc2F2ZVwiLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcInBvcHVwX19zYXZlX2Rpc2FibGVkXCIsXG4gIGlucHV0RXJyb3JDbGFzczogXCJwb3B1cF9faW5wdXQtZXJyb3Jfb3BlblwiLFxuICBlcnJvckNsYXNzOiBcInBvcHVwX19lcnJvcl92aXNpYmxlXCIsXG59O1xuXG5jb25zdCBlZGl0Rm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1fZWRpdFwiKTtcbmNvbnN0IGFkZENhcmRGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybV9jYXJkc1wiKTtcbmNvbnN0IGF2YXRhckNoYW5nZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1fYXZhdGFyXCIpO1xuXG5leHBvcnQge1xuICBzZXR0aW5ncywgZWRpdEZvcm0sIGFkZENhcmRGb3JtLCBhdmF0YXJDaGFuZ2UsIGVkaXRCdXR0b24sIGNsb3NlQnV0dG9uLCBpbnB1dE5hbWUsIGlucHV0UHJvZmVzc2lvbixcbiAgYWRkQnV0dG9uLCBlbGVtZW50c0xpc3QsIHByb2ZpbGVBdmF0YXJcbn07XG4iLCJjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XG4gICAgdGhpcy5fc2V0dGluZ3MgPSBzZXR0aW5ncztcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICB0aGlzLl9zZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvclxuICAgICk7XG4gIH1cblxuICBfc2hvd0lucHV0RXJyb3IgPSAoaW5wdXQsIGVycm9yTWVzc2FnZSkgPT4ge1xuICAgIGNvbnN0IHsgaW5wdXRFcnJvckNsYXNzLCBlcnJvckNsYXNzIH0gPSB0aGlzLl9zZXR0aW5ncztcblxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0LmlkfS1lcnJvcmApO1xuICAgIGlucHV0LmNsYXNzTGlzdC5hZGQoZXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKGlucHV0RXJyb3JDbGFzcyk7XG4gIH07XG5cbiAgX2hpZGVJbnB1dEVycm9yID0gKGlucHV0KSA9PiB7XG4gICAgY29uc3QgeyBpbnB1dEVycm9yQ2xhc3MsIGVycm9yQ2xhc3MgfSA9IHRoaXMuX3NldHRpbmdzO1xuXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXQuaWR9LWVycm9yYCk7XG4gICAgaW5wdXQuY2xhc3NMaXN0LnJlbW92ZShlcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShpbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XG4gIH07XG5cbiAgX2NoZWNrSW5wdXRWYWxpZGl0eSA9IChpbnB1dCkgPT4ge1xuICAgIGlmICghaW5wdXQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0LCBpbnB1dC52YWxpZGF0aW9uTWVzc2FnZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0KTtcbiAgICB9XG4gIH07XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgaW5wdXRTZWxlY3RvciB9ID0gdGhpcy5fc2V0dGluZ3M7XG5cbiAgICB0aGlzLmlucHV0TGlzdCA9IEFycmF5LmZyb20oXG4gICAgICB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKGlucHV0U2VsZWN0b3IpXG4gICAgKTtcblxuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvbigpOyAvL21ldGhvZCBjaGVja1xuXG4gICAgdGhpcy5pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dCk7XG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvbigpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgX2hhc1ZhbGlkSW5wdXQgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHRoaXMuaW5wdXRMaXN0LmV2ZXJ5KChpbnB1dCkgPT4gaW5wdXQudmFsaWRpdHkudmFsaWQpO1xuICB9O1xuXG4gIF90b2dnbGVCdXR0b24gPSAoKSA9PiB7XG4gICAgY29uc3QgeyBpbmFjdGl2ZUJ1dHRvbkNsYXNzIH0gPSB0aGlzLl9zZXR0aW5ncztcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gaW5hY3RpdmVCdXR0b25DbGFzcztcblxuICAgIGlmICh0aGlzLl9oYXNWYWxpZElucHV0KCkpIHtcbiAgICAgIHRoaXMuZW5hYmxlQnV0dG9uKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZGlzYWJsZUJ1dHRvbigpO1xuICAgIH1cbiAgfTtcblxuICBlbmFibGVCdXR0b24gPSAoKSA9PiB7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gIH07XG5cbiAgZGlzYWJsZUJ1dHRvbiA9ICgpID0+IHtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICB9O1xuXG4gIHJlc2V0VmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLmlucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXQpO1xuICAgIH0pO1xuICB9XG5cbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLl9mb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBGb3JtVmFsaWRhdG9yO1xuIiwiZXhwb3J0IGNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3RvcihkYXRhLCB1c2VySWQsIHRlbXBsYXRlQ2FyZFNlbGVjdG9yLCBoYW5kbGVDYXJkQ2xpY2ssIGhhbmRsZUxpa2VJY29uKSB7XG4gICAgdGhpcy5fZGF0YSA9IGRhdGE7XG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xuICAgIHRoaXMuX2xpa2VzID0gZGF0YS5saWtlcztcbiAgICB0aGlzLl9pZCA9IGRhdGEuX2lkO1xuICAgIHRoaXMuX3VzZXJJZCA9IHVzZXJJZDtcblxuXG4gICAgdGhpcy5fdGVtcGxhdGVDYXJkU2VsZWN0b3IgPSB0ZW1wbGF0ZUNhcmRTZWxlY3RvcjtcbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XG4gICAgdGhpcy5faGFuZGxlTGlrZUljb24gPSBoYW5kbGVMaWtlSWNvbjtcbiAgfVxuXG4gIGdldElkKCkge1xuICAgIHJldHVybiB0aGlzLl9pZFxuICB9XG5cbiAgX2dldFRlbXBsYXRlKCkge1xuICAgIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3RlbXBsYXRlQ2FyZFNlbGVjdG9yKVxuICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRzX19jYXJkJyk7XG4gIH1cblxuICBfaGFuZGxlQ2FyZERlbGV0ZSA9ICgpID0+IHtcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5yZW1vdmUoKTtcbiAgfVxuXG4gIF9hZGRFdmVudExpc3RlbmVycyA9ICgpID0+IHtcbiAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5faGFuZGxlTGlrZUljb24oKSk7XG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5faGFuZGxlQ2FyZERlbGV0ZSgpKTtcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sodGhpcy5fbmFtZSwgdGhpcy5fbGluaykpO1xuICB9XG5cbiAgc2V0TGlrZUNvdW50ZXIobmV3TGlrZXMpIHsgICAvL2xlbmd0aCBrxLFzbcSxbsSxIG9rdXlhbcSxeW9yIGthcnQgZWtsZW5lbWl5b3IgLSBoYW5kbGVjYXJkc3VibWl0IGZvbmtzaXlvbnVuYSBsaWtlcyB2ZSBfaWQgZWtsZXllcmVrIMOnw7Z6ZMO8IF5eKytcbiAgICB0aGlzLl9saWtlcyA9IG5ld0xpa2VzO1xuXG4gICAgY29uc3QgbGlrZUNvdW50ZXIgPSB0aGlzLl9saWtlcy5sZW5ndGg7XG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRzX19jYXJkX2xpa2VzJykudGV4dENvbnRlbnQgPSBsaWtlQ291bnRlcjtcblxuICAgIGNvbnN0IGxpa2VDbGlja2VkYnlDdXJyZW50VXNlciA9IHRoaXMuaXNMaWtlZCgpO1xuICAgIGlmKGxpa2VDbGlja2VkYnlDdXJyZW50VXNlcikge1xuICAgICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdlbGVtZW50c19fYnV0dG9uLWxpa2VfYWN0aXZlJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnZWxlbWVudHNfX2J1dHRvbi1saWtlX2FjdGl2ZScpO1xuICAgIH1cbiAgfVxuXG4gIGlzTGlrZWQoKXtcbiAgICByZXR1cm4gdGhpcy5fbGlrZXMuZmluZCh1c2VyID0+IHVzZXIuX2lkID09PSB0aGlzLl91c2VySWQpO1xuICB9XG5cbiAgZ2VuZXJhdGVDYXJkKCkge1xuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKS5jbG9uZU5vZGUodHJ1ZSk7XG5cbiAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHNfX2ltYWdlJyk7XG4gICAgdGhpcy5fY2FyZE5hbWUgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHNfX2NhcmQtdGV4dCcpO1xuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHNfX2J1dHRvbi1saWtlJyk7XG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRzX19idXR0b24tZGVsZXRlJyk7XG5cbiAgICAvL2NhcmQgLy8gZGVzdHJ1Y3R1cmluZyBhc3NpZ25tZW50Ly9cbiAgICB0aGlzLl9jYXJkSW1hZ2Uuc3JjID0gdGhpcy5fbGluaztcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWx0ID0gdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9jYXJkTmFtZS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG5cbiAgICB0aGlzLl9hZGRFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuc2V0TGlrZUNvdW50ZXIodGhpcy5fbGlrZXMpO1xuXG4gICAgcmV0dXJuIHRoaXMuX2NhcmRFbGVtZW50O1xuICB9XG59XG5cbiIsImNvbnN0IFBPUFVQX0NMQVNTID0gJ3BvcHVwJztcbmNvbnN0IENMT1NFX0JVVFRPTl9DTEFTUyA9ICdwb3B1cF9fY2xvc2UnO1xuY29uc3QgUE9QVVBfU0VMRUNUT1JfQ0xBU1MgPSAncG9wdXBfb3Blbic7XG5cbmV4cG9ydCBjbGFzcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9wb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3RvcilcbiAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcylcbiAgfVxuXG4gIF9oYW5kbGVFc2NDbG9zZShldnQpIHtcbiAgICBpZiAoZXZ0LmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgfVxuXG4gIG9wZW4oKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZChQT1BVUF9TRUxFQ1RPUl9DTEFTUyk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoUE9QVVBfU0VMRUNUT1JfQ0xBU1MpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIChldnQpID0+IHtcbiAgICAgIGlmIChcbiAgICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoUE9QVVBfQ0xBU1MpIHx8XG4gICAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKENMT1NFX0JVVFRPTl9DTEFTUylcbiAgICAgICkge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICB9XG4gICAgfSlcbiAgfVxufVxuLy8qKiogbW91c2Vkb3duIHJlcGxhY2VkIGNsaWNrIHRvIHByZXZlbnQgdGhlIGJ1ZyBpZiB5b3UgY2xpY2sgaW5zaWRlIGEgcG9wdXAgYW5kIHRoZW4gbW92ZSB5b3VyIG1vdXNlIG91dHNpZGUgaXRcbi8vIGFuZCByZWxlYXNlIHRoZSBidXR0b24gYWJvdmUgdGhlIG92ZXJsYXkgdGhlbiB0aGUgcG9wdXAgY2xvc2VzIGJ1dCBpdOKAmXMgbm90XG4iLCJpbXBvcnQgeyBQb3B1cCB9IGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVTdWJtaXRGb3JtICkge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpXG5cbiAgICB0aGlzLl9oYW5kbGVTdWJtaXRGb3JtID0gaGFuZGxlU3VibWl0Rm9ybVxuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKVxuICAgIHRoaXMuX2lucHV0cyA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCgnLnBvcHVwX19pbnB1dCcpICAgICAgIC8vWy4uLnRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCgnLnBvcHVwX19pbnB1dCcpXVxuICB9XG5cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIGNvbnN0IHZhbHVlcyA9IHt9XG5cblxuICAgIHRoaXMuX2lucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgY29uc3Qga2V5ID0gaW5wdXQuaWRcbiAgICAgIGNvbnN0IHZhbHVlID0gaW5wdXQudmFsdWVcbiAgICAgIHZhbHVlc1trZXldID0gdmFsdWVcbiAgICB9KVxuICAgIHJldHVybiB2YWx1ZXM7XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKClcblxuICAgICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKCAnc3VibWl0JywgKGUpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnISEhIScpXG4gICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXG5cbiAgICAgICAgICB0aGlzLl9oYW5kbGVTdWJtaXRGb3JtKHRoaXMuX2dldElucHV0VmFsdWVzKCkpXG4gICAgICAgIH0pXG4gICAgICB9XG5cbiAgc2V0SW5wdXRWYWx1ZXMoZGF0YSl7XG4gICAgdGhpcy5faW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICBpbnB1dC52YWx1ZSA9IGRhdGFbaW5wdXQubmFtZV07XG4gICAgfSlcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgICAgc3VwZXIuY2xvc2UoKVxuICAgICAgdGhpcy5fZm9ybS5yZXNldCgpXG4gIH1cblxufVxuXG4iLCJjbGFzcyBBcGkge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgdGhpcy5fYmFzZVVybCA9IG9wdGlvbnMuYmFzZVVybFxuICAgIHRoaXMuX2hlYWRlcnMgPSBvcHRpb25zLmhlYWRlcnNcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiBmZXRjaCh0aGlzLl9iYXNlVXJsICsgJy91c2Vycy9tZScsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcbiAgICB9KS50aGVuKCByZXMgPT4gcmVzLm9rID8gcmVzLmpzb24oKSA6IFByb21pc2UucmVqZWN0KHJlcy5zdGF0dXNUZXh0KSlcbiAgICAvLyAuY2F0Y2goZXJyID0+IHtcbiAgICAvLyAgIGNvbnNvbGUubG9nKCdBcGkgaGFzIGFuIGVycm9yISEhJylcbiAgICAvLyB9KVxuICB9XG5cbiAgZWRpdFByb2ZpbGUobmFtZSwgYWJvdXQpIHtcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVybCArICcvdXNlcnMvbWUnLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIGFib3V0LFxuICAgICAgfSlcbiAgICB9KS50aGVuKHJlcyA9PiByZXMub2sgPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QocmVzLnN0YXR1c1RleHQpKVxuICB9XG5cbiAgZWRpdEF2YXRhcihhdmF0YXIpIHtcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVybCArICcvdXNlcnMvbWUvYXZhdGFyJywge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBhdmF0YXJcbiAgICAgIH0pXG4gICAgfSkudGhlbihyZXMgPT4gcmVzLm9rID8gcmVzLmpzb24oKSA6IFByb21pc2UucmVqZWN0KHJlcy5zdGF0dXNUZXh0KSlcbiAgfVxuXG4gIGdldEluaXRpYWxDYXJkcygpIHtcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVybCArICcvY2FyZHMnLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXG4gICAgfSkudGhlbiggcmVzID0+IHJlcy5vayA/IHJlcy5qc29uKCkgOiBQcm9taXNlLnJlamVjdChyZXMuc3RhdHVzVGV4dCkpXG4gIH0gLy9uYW1lICAmIGxpbmsgaW4gdGhlIGJvZHkgY2hlY2sgbS5cblxuICBhZGRDYXJkKG5hbWUsIGxpbmspIHtcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVybCArICcvY2FyZHMnLCB7XG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgbGluayxcbiAgICAgIH0pXG4gICAgfSkudGhlbihyZXMgPT4gcmVzLm9rID8gcmVzLmpzb24oKSA6IFByb21pc2UucmVqZWN0KHJlcy5zdGF0dXNUZXh0KSlcbiAgfVxuXG4gIGFkZExpa2UoaWQpIHtcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVybCArICcvY2FyZHMvbGlrZXMvJyArIGlkLCB7XG4gICAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXG4gICAgfSkudGhlbihyZXMgPT4gcmVzLm9rID8gcmVzLmpzb24oKSA6IFByb21pc2UucmVqZWN0KHJlcy5zdGF0dXNUZXh0KSlcbiAgfVxuXG4gIHJlbW92ZUxpa2UoaWQpIHtcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVybCArICcvY2FyZHMvbGlrZXMvJyArIGlkLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXG4gICAgfSkudGhlbihyZXMgPT4gcmVzLm9rID8gcmVzLmpzb24oKSA6IFByb21pc2UucmVqZWN0KHJlcy5zdGF0dXNUZXh0KSlcbiAgfVxuXG5cbn1cblxuZXhwb3J0IGNvbnN0IGFwaSA9IG5ldyBBcGkoe1xuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTMtZW5cIixcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246IFwiOTM5OGE0ODMtNDg0ZS00ZWJkLWEzNzQtYjZiM2I5ODVlOWM0XCIsXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgfVxufSk7IC8vIHRoaXMuX2Jhc2VVcmwgLy8gdGhpcy5faGVhZGVyc1xuIiwiXG5pbXBvcnQgXCIuLi9wYWdlL2luZGV4LmNzc1wiOyAvLyBtYWluIGJyaWRnZSB0byBjc3MgZmlsZXMgYWZ0ZXIgd2VicGFjayBidWlsZCBhbHdheXMgaW5zdGFsbCAxc3RcblxuaW1wb3J0IHsgc2V0dGluZ3MsIGVkaXRGb3JtLCBhZGRDYXJkRm9ybSwgZWRpdEJ1dHRvbiwgY2xvc2VCdXR0b24sIGlucHV0TmFtZSwgaW5wdXRQcm9mZXNzaW9uLFxuICBhZGRCdXR0b24sIHByb2ZpbGVBdmF0YXIsIGF2YXRhckNoYW5nZSwgZWxlbWVudHNMaXN0IH0gZnJvbSAnLi4vdXRpbHMvY29uc3RhbnRzLmpzJztcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gJy4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyc7XG5pbXBvcnQgeyBDYXJkIH0gZnJvbSAnLi4vY29tcG9uZW50cy9DYXJkLmpzJztcbmltcG9ydCB7IFNlY3Rpb24gfSBmcm9tICcuLi9jb21wb25lbnRzL1NlY3Rpb24uanMnO1xuaW1wb3J0IHsgUG9wdXBXaXRoRm9ybSB9IGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyc7XG5pbXBvcnQgeyBQb3B1cFdpdGhJbWFnZSB9IGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XG5pbXBvcnQgeyBVc2VySW5mbyB9IGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XG5cbmltcG9ydCB7IGFwaSwgQXBpIH0gZnJvbSBcIi4uL3V0aWxzL0FwaS5qc1wiO1xuLy9pbXBvcnQgeyBQb3B1cCB9IGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwXCI7XG5cbmxldCB1c2VySWRcblxuLy9hcGkuZ2V0VXNlckluZm8gJiBhcGkuZ2V0SW5pdGlhbENhcmRzIGNvbWJpbmVkIHdpdGggUHJvbWlzZS5cblByb21pc2UuYWxsKFthcGkuZ2V0VXNlckluZm8oKSwgYXBpLmdldEluaXRpYWxDYXJkcygpXSlcbiAgLnRoZW4oKFt1c2VyRGF0YSwgY2FyZHNdKSA9PiB7XG4gICAgdXNlcklkID0gdXNlckRhdGEuX2lkICAvL3VzZXJEYXRhLl91c2VySWRcblxuICAgIGNvbnNvbGUubG9nKCd1c2VyID0+JywgdXNlckRhdGEpXG4gICAgdXNlckluZm8uc2V0VXNlckluZm8odXNlckRhdGEubmFtZSwgIHVzZXJEYXRhLmFib3V0LCB1c2VyRGF0YS5hdmF0YXIpXG4gICAgc2VjdGlvbi5yZW5kZXJlckl0ZW1zKGNhcmRzKVxuICB9KVxuICAuY2F0Y2goY29uc29sZS5sb2cpXG5cbi8vZm9ybSB2YWxpZGF0b3Igc2V0dGluZ3MgZG9tIHJlZmVyZW5jZXMvL1xuY29uc3QgZWRpdEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihcbiAgc2V0dGluZ3MsXG4gICBlZGl0Rm9ybVxuICApO1xuY29uc3QgYWRkQ2FyZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihcbiAgc2V0dGluZ3MsXG4gIGFkZENhcmRGb3JtXG4gICk7XG5cbmNvbnN0IGF2YXRhckZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihcbiAgc2V0dGluZ3MsXG4gIGF2YXRhckNoYW5nZVxuKTtcblxuZWRpdEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuYWRkQ2FyZEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuYXZhdGFyRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5lZGl0Rm9ybVZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTtcblxuLy9hZGRjYXJkc3VibWl0XG5jb25zdCBoYW5kbGVDYXJkU3VibWl0ID0gKGRhdGEpID0+IHtcblxuICBhcGkuYWRkQ2FyZChkYXRhLmNhcmRUaXRsZSwgZGF0YS5jYXJkSW1hZ2VMaW5rKVxuICAudGhlbihyZXMgPT4ge1xuICAgIC8vY29uc29sZS5sb2coJ3JlcyA9PicsIHJlcylcbiAgICBjb25zdCBjYXJkID0ge1xuICAgICAgbmFtZTogcmVzLm5hbWUsXG4gICAgICBsaW5rOiByZXMubGluayxcbiAgICAgIGxpa2VzOiByZXMubGlrZXMsXG4gICAgICBfaWQ6IHJlcy5faWQsXG4gICAgfTtcbiAgICBzZWN0aW9uLmFkZEl0ZW0oY2FyZCk7XG4gIH0pXG4gIC5jYXRjaChjb25zb2xlLmxvZylcblxuICBhZGRDYXJkUG9wdXAuY2xvc2UoKTtcbn1cbi8vZWRpdHByb2ZpbGUgc3VibWl0XG5jb25zdCBoYW5kbGVQcm9maWxlRm9ybVN1Ym1pdCA9IChkYXRhKSA9PiB7XG4gIGFwaS5lZGl0UHJvZmlsZShkYXRhLm5hbWUsIGRhdGEucHJvZmVzc2lvbilcbiAgLnRoZW4oIHJlcyA9PiB7XG4gICAgdXNlckluZm8uc2V0VXNlckluZm8ocmVzLm5hbWUsIGRhdGEucHJvZmVzc2lvbiwgcmVzLmF2YXRhcikgLy9kYXRhLm5hbWUsIGRhdGEucHJvZmVzc2lvblxuICB9KVxuICAuY2F0Y2goY29uc29sZS5sb2cpXG4gIC5maW5hbGx5KCAoKSA9PiB7XG4gICAgZWRpdFByb2ZpbGVQb3B1cC5jbG9zZSgpXG4gIH0pXG59O1xuXG4vL2F2YXRhciBQaWN0dXJlIFN1Ym1pdFxuY29uc3QgaGFuZGxlQXZhdGFyU3VibWl0ID0gKGRhdGEpID0+IHtcbiAgYXBpLmVkaXRBdmF0YXIoIGRhdGEubGluaykgIC8vZGF0YS5uYW1lLCBkYXRhLnByb2Zlc3Npb24sXG4gIC50aGVuKCByZXMgPT4ge1xuICAgIC8vY29uc29sZS5sb2cocmVzKVxuICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHJlcy5uYW1lLCByZXMucHJvZmVzc2lvbiwgcmVzLmF2YXRhcilcbiAgfSlcbiAgLmNhdGNoKGNvbnNvbGUubG9nKVxuICAuZmluYWxseSggKCkgPT4ge1xuICAgIGF2YXRhckNoYW5nZVBvcHVwLmNsb3NlKCk7XG4gIH0pXG5cbn07XG5cbmNvbnN0IGVkaXRQcm9maWxlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSgnI3BvcHVwLXRlbXBsYXRlJywgaGFuZGxlUHJvZmlsZUZvcm1TdWJtaXQpXG5lZGl0UHJvZmlsZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKClcblxuY29uc3QgYXZhdGFyQ2hhbmdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSgnI3BvcHVwLXRlbXBsYXRlLWF2YXRhcicsIGhhbmRsZUF2YXRhclN1Ym1pdClcbmF2YXRhckNoYW5nZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKClcblxuY29uc3QgYWRkQ2FyZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oJyNwb3B1cC10ZW1wbGF0ZS1mb3JtJywgaGFuZGxlQ2FyZFN1Ym1pdClcbmFkZENhcmRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpIC8vb25seSBjYWxsIG9uY2UgLCBuZXZlciBpbiBpZiBsb29wIGV0Y1xuXG5jb25zdCBpbWFnZVBvcHVwID0gbmV3IFBvcHVwV2l0aEltYWdlKCcjcG9wdXAtaW1hZ2UnKVxuaW1hZ2VQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuXG5jb25zdCBjcmVhdGVDYXJkID0gKGRhdGEpID0+IHtcbiAgY29uc3QgaXRlbSA9IG5ldyBDYXJkIChcbiAgICBkYXRhLFxuICAgIHVzZXJJZCxcbiAgICAnI2NhcmQtdGVtcGxhdGUnLFxuICAobmFtZSwgbGluaykgPT4ge1xuICAgIGltYWdlUG9wdXAub3BlbihuYW1lLCBsaW5rKVxuICAgIH0sXG4gICAgKCkgPT4ge1xuICAgICAgaWYoaXRlbS5pc0xpa2VkKCkpIHtcbiAgICAgICAgYXBpLnJlbW92ZUxpa2UoaXRlbS5nZXRJZCgpKVxuICAgICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICAgIGl0ZW0uc2V0TGlrZUNvdW50ZXIocmVzLmxpa2VzKVxuICAgICAgICAgIC8vY29uc29sZS5sb2coXCJ5b3UgZG9uJ3QgbGlrZSBpdFwiKVxuICAgICAgICB9KVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYXBpLmFkZExpa2UoaXRlbS5nZXRJZCgpKVxuICAgICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICAgIGl0ZW0uc2V0TGlrZUNvdW50ZXIocmVzLmxpa2VzKVxuICAgICAgICAgIC8vY29uc29sZS5sb2coXCJ5b3UgbGlrZSBpdCFcIilcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICB9XG4gICk7XG5cbiByZXR1cm4gaXRlbS5nZW5lcmF0ZUNhcmQoKTtcbn1cblxuY29uc3Qgc2VjdGlvbiA9IG5ldyBTZWN0aW9uKFxuICAgIHtcbiAgICAgIHJlbmRlcmVyOiBjcmVhdGVDYXJkLFxuICAgIH0sXG4gICAgJy5lbGVtZW50c19fY2FyZHMnXG4gIClcblxuXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyh7XG4gIHByb2ZpbGVOYW1lU2VsZWN0b3I6ICcucHJvZmlsZV9faGVhZGVyJyxcbiAgcHJvZmlsZVByb2Zlc3Npb25TZWxlY3RvcjogJy5wcm9maWxlX19wcm9mZXNzaW9uJyxcbiAgcHJvZmlsZUF2YXRhcjogJy5wcm9maWxlX19pbWFnZScsXG59KVxuXG5cbmZ1bmN0aW9uIG9wZW5Qcm9maWxlUG9wdXAoKSB7XG4gIGNvbnN0IHByb2ZpbGVJbmZvID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcblxuICBpbnB1dE5hbWUudmFsdWUgPSBwcm9maWxlSW5mby5uYW1lO1xuICBpbnB1dFByb2Zlc3Npb24udmFsdWUgPSBwcm9maWxlSW5mby5wcm9mZXNzaW9uO1xuXG4gIGVkaXRGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpOyAvLzIga2VyZSBtaSByZXNldGxlbmRpIGJha2FsxLFtXG4gIGVkaXRGb3JtVmFsaWRhdG9yLmVuYWJsZUJ1dHRvbigpO1xuICBlZGl0UHJvZmlsZVBvcHVwLm9wZW4oKTtcbn1cblxuLy9FdmVudCBoYW5kbGVyc1xuZWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9wZW5Qcm9maWxlUG9wdXApO1xuXG5hZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgYWRkQ2FyZEZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XG4gIGFkZENhcmRGb3JtVmFsaWRhdG9yLmRpc2FibGVCdXR0b24oKTtcbiAgYWRkQ2FyZFBvcHVwLm9wZW4oKTtcbn0pXG5cbi8vIGNvbnNvbGUubG9nKCdhdmF0YXInLCBhdmF0YXIpXG5wcm9maWxlQXZhdGFyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICBhdmF0YXJGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xuICBhdmF0YXJGb3JtVmFsaWRhdG9yLmRpc2FibGVCdXR0b24oKTtcbiAgYXZhdGFyQ2hhbmdlUG9wdXAub3BlbigpO1xufSlcblxuXG4iLCJcbmltcG9ydCB7IFBvcHVwIH0gZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3RvcilcbiAgICB0aGlzLl9zdWJ0aXRsZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fc3VidGl0bGUnKTtcbiAgICB0aGlzLl9pbWFnZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW1hZ2UnKTtcbiAgfVxuXG5cbiAgb3BlbihuYW1lLCBsaW5rKSB7XG5cbiAgICBzdXBlci5vcGVuKClcbiAgICAgIHRoaXMuX2ltYWdlLnNyYyA9IGxpbms7XG4gICAgICB0aGlzLl9pbWFnZS5hbHQgPSBuYW1lO1xuICAgICAgdGhpcy5fc3VidGl0bGUudGV4dENvbnRlbnQgPSBuYW1lO1xuXG4gIH1cblxufVxuIiwiXG5leHBvcnQgY2xhc3MgU2VjdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHsgcmVuZGVyZXIgfSwgY29udGFpbmVyICkge1xuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXIpO1xuICB9XG5cblxuXG4gIHJlbmRlcmVySXRlbXMoaXRlbXMpIHtcbiAgICBpdGVtcy5mb3JFYWNoKChkYXRhKSA9PiB7XG4gICAgICAgIHRoaXMuYWRkSXRlbShkYXRhKVxuICAgIH0pXG4gIH07XG5cbiAgYWRkSXRlbShkYXRhKSB7XG4gICAgY29uc3QgZWxlbWVudCA9IHRoaXMuX3JlbmRlcmVyKGRhdGEpXG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudClcbiAgfTtcblxuXG59XG4iLCJleHBvcnQgY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3Rvcih7cHJvZmlsZU5hbWVTZWxlY3RvciwgcHJvZmlsZVByb2Zlc3Npb25TZWxlY3RvciwgcHJvZmlsZUF2YXRhcn0pXG4gIHtcbiAgICB0aGlzLl9wcm9maWxlTmFtZT0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwcm9maWxlTmFtZVNlbGVjdG9yKTtcbiAgICB0aGlzLl9wcm9maWxlUHJvZmVzc2lvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocHJvZmlsZVByb2Zlc3Npb25TZWxlY3Rvcik7XG4gICAgdGhpcy5fcHJvZmlsZUF2YXRhcj0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwcm9maWxlQXZhdGFyKTtcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCl7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6IHRoaXMuX3Byb2ZpbGVOYW1lLnRleHRDb250ZW50LFxuICAgICAgcHJvZmVzc2lvbjogdGhpcy5fcHJvZmlsZVByb2Zlc3Npb24udGV4dENvbnRlbnQsXG4gICAgICBhdmF0YXI6IHRoaXMuX3Byb2ZpbGVBdmF0YXIuc3R5bGUuYmFja2dyb3VuZEltYWdlXG4gICAgfVxuICB9XG5cbiAgc2V0VXNlckluZm8obmFtZSwgcHJvZmVzc2lvbiwgYXZhdGFyKSB7XG4gICAgdGhpcy5fcHJvZmlsZU5hbWUudGV4dENvbnRlbnQgPSBuYW1lO1xuICAgIHRoaXMuX3Byb2ZpbGVQcm9mZXNzaW9uLnRleHRDb250ZW50ID0gcHJvZmVzc2lvbjtcbiAgICB0aGlzLl9wcm9maWxlQXZhdGFyLnN0eWxlLmJhY2tncm91bmRJbWFnZSA9IGB1cmwoJHthdmF0YXJ9KWA7XG4gIH1cblxuXG59XG4iXSwibmFtZXMiOlsicHJvZmlsZUluZm8iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJwcm9maWxlQXZhdGFyIiwicXVlcnlTZWxlY3RvckFsbCIsInByb2ZpbGVQb3B1cCIsImZvcm1zIiwicHJvZmlsZUZvcm0iLCJlZGl0QnV0dG9uIiwiaW5wdXROYW1lIiwiaW5wdXRQcm9mZXNzaW9uIiwicHJldmlld0ltYWdlIiwiYWRkQnV0dG9uIiwic2V0dGluZ3MiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImVkaXRGb3JtIiwiYWRkQ2FyZEZvcm0iLCJhdmF0YXJDaGFuZ2UiLCJjb25zdHJ1Y3RvciIsImZvcm1FbGVtZW50IiwiaW5wdXQiLCJlcnJvck1lc3NhZ2UiLCJ0aGlzIiwiX3NldHRpbmdzIiwiZXJyb3JFbGVtZW50IiwiX2Zvcm1FbGVtZW50IiwiaWQiLCJjbGFzc0xpc3QiLCJhZGQiLCJ0ZXh0Q29udGVudCIsInJlbW92ZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImlucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsIl90b2dnbGVCdXR0b24iLCJmb3JFYWNoIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJldmVyeSIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2hhc1ZhbGlkSW5wdXQiLCJlbmFibGVCdXR0b24iLCJkaXNhYmxlQnV0dG9uIiwiX3N1Ym1pdEJ1dHRvbiIsImRpc2FibGVkIiwicmVzZXRWYWxpZGF0aW9uIiwiZW5hYmxlVmFsaWRhdGlvbiIsImV2dCIsInByZXZlbnREZWZhdWx0IiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiQ2FyZCIsImRhdGEiLCJ1c2VySWQiLCJ0ZW1wbGF0ZUNhcmRTZWxlY3RvciIsImhhbmRsZUNhcmRDbGljayIsImhhbmRsZUxpa2VJY29uIiwiX2NhcmRFbGVtZW50IiwiX2xpa2VCdXR0b24iLCJfaGFuZGxlTGlrZUljb24iLCJfZGVsZXRlQnV0dG9uIiwiX2hhbmRsZUNhcmREZWxldGUiLCJfY2FyZEltYWdlIiwiX2hhbmRsZUNhcmRDbGljayIsIl9uYW1lIiwiX2xpbmsiLCJfZGF0YSIsIm5hbWUiLCJsaW5rIiwiX2xpa2VzIiwibGlrZXMiLCJfaWQiLCJfdXNlcklkIiwiX3RlbXBsYXRlQ2FyZFNlbGVjdG9yIiwiZ2V0SWQiLCJfZ2V0VGVtcGxhdGUiLCJjb250ZW50Iiwic2V0TGlrZUNvdW50ZXIiLCJuZXdMaWtlcyIsImxpa2VDb3VudGVyIiwibGVuZ3RoIiwiaXNMaWtlZCIsImZpbmQiLCJ1c2VyIiwiZ2VuZXJhdGVDYXJkIiwiY2xvbmVOb2RlIiwiX2NhcmROYW1lIiwic3JjIiwiYWx0IiwiX2FkZEV2ZW50TGlzdGVuZXJzIiwiUE9QVVBfU0VMRUNUT1JfQ0xBU1MiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXAiLCJfaGFuZGxlRXNjQ2xvc2UiLCJiaW5kIiwia2V5IiwiY2xvc2UiLCJvcGVuIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInNldEV2ZW50TGlzdGVuZXJzIiwidGFyZ2V0IiwiY29udGFpbnMiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlU3VibWl0Rm9ybSIsInN1cGVyIiwiX2hhbmRsZVN1Ym1pdEZvcm0iLCJfZm9ybSIsIl9pbnB1dHMiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJ2YWx1ZXMiLCJ2YWx1ZSIsImUiLCJjb25zb2xlIiwibG9nIiwic2V0SW5wdXRWYWx1ZXMiLCJyZXNldCIsImFwaSIsIm9wdGlvbnMiLCJfYmFzZVVybCIsImJhc2VVcmwiLCJfaGVhZGVycyIsImhlYWRlcnMiLCJnZXRVc2VySW5mbyIsImZldGNoIiwidGhlbiIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXNUZXh0IiwiZWRpdFByb2ZpbGUiLCJhYm91dCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZWRpdEF2YXRhciIsImF2YXRhciIsImdldEluaXRpYWxDYXJkcyIsImFkZENhcmQiLCJhZGRMaWtlIiwicmVtb3ZlTGlrZSIsImF1dGhvcml6YXRpb24iLCJhbGwiLCJ1c2VyRGF0YSIsImNhcmRzIiwidXNlckluZm8iLCJzZXRVc2VySW5mbyIsInNlY3Rpb24iLCJyZW5kZXJlckl0ZW1zIiwiY2F0Y2giLCJlZGl0Rm9ybVZhbGlkYXRvciIsIkZvcm1WYWxpZGF0b3IiLCJhZGRDYXJkRm9ybVZhbGlkYXRvciIsImF2YXRhckZvcm1WYWxpZGF0b3IiLCJlZGl0UHJvZmlsZVBvcHVwIiwicHJvZmVzc2lvbiIsImZpbmFsbHkiLCJhdmF0YXJDaGFuZ2VQb3B1cCIsImFkZENhcmRQb3B1cCIsImNhcmRUaXRsZSIsImNhcmRJbWFnZUxpbmsiLCJjYXJkIiwiYWRkSXRlbSIsImltYWdlUG9wdXAiLCJfc3VidGl0bGUiLCJfaW1hZ2UiLCJjb250YWluZXIiLCJyZW5kZXJlciIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJpdGVtcyIsImVsZW1lbnQiLCJwcmVwZW5kIiwiaXRlbSIsInByb2ZpbGVOYW1lU2VsZWN0b3IiLCJwcm9maWxlUHJvZmVzc2lvblNlbGVjdG9yIiwiX3Byb2ZpbGVOYW1lIiwiX3Byb2ZpbGVQcm9mZXNzaW9uIiwiX3Byb2ZpbGVBdmF0YXIiLCJzdHlsZSIsImJhY2tncm91bmRJbWFnZSJdLCJzb3VyY2VSb290IjoiIn0=