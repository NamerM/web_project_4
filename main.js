!function(){"use strict";const e=document.querySelector(".profile__info"),t=(e.querySelector(".profile__header"),e.querySelector(".profile__profession"),document.querySelectorAll(".popup"),document.querySelector(".profile__image")),s=(document.forms.profileForm,document.querySelector(".popup_type_profile")),r=document.querySelector(".profile__button"),i=(s.querySelector(".popup__close"),s.querySelector(".popup__input_type_name")),o=s.querySelector(".popup__input_type_profession"),n=document.querySelector(".popup_type-preview"),a=(document.querySelector(".popup_type_add-card"),document.querySelector(".add-button")),l=(document.querySelector(".popup__close.popup__close_preview"),document.querySelector(".popup__close.popup__close_add"),document.querySelector(".popup__input_type_title"),document.querySelector(".popup__input_type_link"),n.querySelector(".popup__image"),n.querySelector(".popup__subtitle"),document.querySelector(".elements__cards"),{inputSelector:".popup__input",submitButtonSelector:".popup__save",inactiveButtonClass:"popup__save_disabled",inputErrorClass:"popup__input-error_open",errorClass:"popup__error_visible"}),c=document.querySelector(".popup__form_edit"),u=document.querySelector(".popup__form_cards"),_=document.querySelector(".popup__form_avatar");function d(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var p=class{constructor(e,t){d(this,"_showInputError",((e,t)=>{const{inputErrorClass:s,errorClass:r}=this._settings,i=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(r),i.textContent=t,i.classList.add(s)})),d(this,"_hideInputError",(e=>{const{inputErrorClass:t,errorClass:s}=this._settings,r=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(s),r.classList.remove(t),r.textContent=""})),d(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)})),d(this,"_setEventListeners",(()=>{const{inputSelector:e}=this._settings;this.inputList=Array.from(this._formElement.querySelectorAll(e)),this._toggleButton(),this.inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButton()}))}))})),d(this,"_hasValidInput",(()=>this.inputList.every((e=>e.validity.valid)))),d(this,"_toggleButton",(()=>{const{inactiveButtonClass:e}=this._settings;this._inactiveButtonClass=e,this._hasValidInput()?this.enableButton():this.disableButton()})),d(this,"enableButton",(()=>{this._submitButton.disabled=!1,this._submitButton.classList.remove(this._inactiveButtonClass)})),d(this,"disableButton",(()=>{this._submitButton.disabled=!0,this._submitButton.classList.add(this._inactiveButtonClass)})),this._settings=e,this._formElement=t,this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector)}resetValidation(){this.inputList.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};function h(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class m{constructor(e,t,s,r,i){h(this,"_handleCardDelete",(()=>{this._cardElement.remove()})),h(this,"_addEventListeners",(()=>{this._likeButton.addEventListener("click",(()=>this._handleLikeIcon())),this._deleteButton.addEventListener("click",(()=>this._handleCardDelete())),this._cardImage.addEventListener("click",(()=>this._handleCardClick(this._name,this._link)))})),this._data=e,this._name=e.name,this._link=e.link,this._likes=e.likes,this._id=e._id,this._userId=t,this._templateCardSelector=s,this._handleCardClick=r,this._handleLikeIcon=i}getId(){return this._id}_getTemplate(){return document.querySelector(this._templateCardSelector).content.querySelector(".elements__card")}setLikeCounter(e){this._likes=e;const t=this._likes.length;this._cardElement.querySelector(".elements__card_likes").textContent=t,this.isLiked()?this._likeButton.classList.add("elements__button-like_active"):this._likeButton.classList.remove("elements__button-like_active")}isLiked(){return this._likes.find((e=>e._id===this._userId))}generateCard(){return this._cardElement=this._getTemplate().cloneNode(!0),this._cardImage=this._cardElement.querySelector(".elements__image"),this._cardName=this._cardElement.querySelector(".elements__card-text"),this._likeButton=this._cardElement.querySelector(".elements__button-like"),this._deleteButton=this._cardElement.querySelector(".elements__button-delete"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardName.textContent=this._name,this._addEventListeners(),this.setLikeCounter(this._likes),this._cardElement}}const f="popup_open";class v{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}open(){this._popup.classList.add(f),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove(f),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popup.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&this.close()}))}}class y extends v{constructor(e,t){super(e),this._handleSubmitForm=t,this._form=this._popup.querySelector(".popup__form"),this._inputs=this._form.querySelectorAll(".popup__input")}_getInputValues(){const e={};return this._inputs.forEach((t=>{const s=t.id,r=t.value;e[s]=r})),e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{console.log("input taken"),e.preventDefault(),this._handleSubmitForm(this._getInputValues())}))}setInputValues(e){this._inputs.forEach((t=>{t.value=e[t.name]}))}close(){super.close(),this._form.reset()}}const b=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}getUserInfo(){return fetch(this._baseUrl+"/users/me",{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}editProfile(e,t){return fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}editAvatar(e){return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}getInitialCards(){return fetch(this._baseUrl+"/cards",{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}addCard(e,t){return fetch(this._baseUrl+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}addLike(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"PUT",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}removeLike(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(e.statusText)))}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"9398a483-484e-4ebd-a374-b6b3b985e9c4","Content-Type":"application/json"}});let k;Promise.all([b.getUserInfo(),b.getInitialCards()]).then((e=>{let[t,s]=e;k=t._id,console.log("user =>",t),P.setUserInfo(t.name,t.about,t.avatar),B.rendererItems(s)})).catch(console.log);const g=new p(l,c),E=new p(l,u),S=new p(l,_);g.enableValidation(),E.enableValidation(),S.enableValidation(),g.resetValidation();const L=new y("#popup-template",(e=>{b.editProfile(e.name,e.profession).then((t=>{P.setUserInfo(t.name,e.profession,t.avatar)})).catch(console.log).finally((()=>{L.close()}))}));L.setEventListeners();const C=new y("#popup-template-avatar",(e=>{b.editAvatar(e.link).then((e=>{P.setUserInfo(e.name,e.about,e.avatar)})).catch(console.log).finally((()=>{C.close()}))}));C.setEventListeners();const q=new y("#popup-template-form",(e=>{b.addCard(e.cardTitle,e.cardImageLink).then((e=>{const t={name:e.name,link:e.link,likes:e.likes,_id:e._id};B.addItem(t)})).catch(console.log),q.close()}));q.setEventListeners();const I=new class extends v{constructor(e){super(e),this._subtitle=this._popup.querySelector(".popup__subtitle"),this._image=this._popup.querySelector(".popup__image")}open(e,t){super.open(),this._image.src=t,this._image.alt=e,this._subtitle.textContent=e}}("#popup-image");I.setEventListeners();const B=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}rendererItems(e){e.forEach((e=>{this.addItem(e)}))}addItem(e){const t=this._renderer(e);this._container.prepend(t)}}({renderer:e=>{const t=new m(e,k,"#card-template",((e,t)=>{I.open(e,t)}),(()=>{t.isLiked()?b.removeLike(t.getId()).then((e=>{t.setLikeCounter(e.likes)})):b.addLike(t.getId()).then((e=>{t.setLikeCounter(e.likes)}))}));return t.generateCard()}},".elements__cards"),P=new class{constructor(e){let{profileNameSelector:t,profileProfessionSelector:s,profileAvatar:r}=e;this._profileName=document.querySelector(t),this._profileProfession=document.querySelector(s),this._profileAvatar=document.querySelector(r)}getUserInfo(){return{name:this._profileName.textContent,profession:this._profileProfession.textContent,avatar:this._profileAvatar.style.backgroundImage}}setUserInfo(e,t,s){this._profileName.textContent=e,this._profileProfession.textContent=t,this._profileAvatar.style.backgroundImage="url(".concat(s,")")}}({profileNameSelector:".profile__header",profileProfessionSelector:".profile__profession",profileAvatar:".profile__image"});r.addEventListener("click",(function(){const e=P.getUserInfo();i.value=e.name,o.value=e.profession,g.resetValidation(),g.enableButton(),L.open()})),a.addEventListener("click",(()=>{E.resetValidation(),E.disableButton(),q.open()})),t.addEventListener("click",(()=>{S.resetValidation(),S.disableButton(),C.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,